/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IAccessControlManager,
  IAccessControlManagerInterface,
} from "../../contracts/IAccessControlManager";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
      {
        internalType: "address",
        name: "accountToPermit",
        type: "address",
      },
    ],
    name: "giveCallPermission",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
    ],
    name: "isAllowedToCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
      {
        internalType: "address",
        name: "accountToRevoke",
        type: "address",
      },
    ],
    name: "revokeCallPermission",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAccessControlManager__factory {
  static readonly abi = _abi;
  static createInterface(): IAccessControlManagerInterface {
    return new utils.Interface(_abi) as IAccessControlManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAccessControlManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IAccessControlManager;
  }
}
