/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  NAIUnitrollerAdminStorage,
  NAIUnitrollerAdminStorageInterface,
} from "../../../contracts/NAIControllerStorage.sol/NAIUnitrollerAdminStorage";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "naiControllerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pendingNAIControllerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80632678224714604b5780634bc16f8a14606d578063f851a440146073578063fac034fa146079575b600080fd5b6051607f565b604080516001600160a01b039092168252519081900360200190f35b6051608e565b6051609d565b605160ac565b6001546001600160a01b031681565b6003546001600160a01b031681565b6000546001600160a01b031681565b6002546001600160a01b03168156fea265627a7a72315820cb48ec2d91e8a31296a1b9194e8d1c35fc17aa598b2f15a50cbb69b06607ef2664736f6c63430005100032";

type NAIUnitrollerAdminStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NAIUnitrollerAdminStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NAIUnitrollerAdminStorage__factory extends ContractFactory {
  constructor(...args: NAIUnitrollerAdminStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NAIUnitrollerAdminStorage> {
    return super.deploy(overrides || {}) as Promise<NAIUnitrollerAdminStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NAIUnitrollerAdminStorage {
    return super.attach(address) as NAIUnitrollerAdminStorage;
  }
  override connect(signer: Signer): NAIUnitrollerAdminStorage__factory {
    return super.connect(signer) as NAIUnitrollerAdminStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NAIUnitrollerAdminStorageInterface {
    return new utils.Interface(_abi) as NAIUnitrollerAdminStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NAIUnitrollerAdminStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NAIUnitrollerAdminStorage;
  }
}
