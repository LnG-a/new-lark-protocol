/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  VDelegateInterface,
  VDelegateInterfaceInterface,
} from "../../../contracts/NTokenInterfaces.sol/VDelegateInterface";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "_becomeImplementation",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "_resignImplementation",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

export class VDelegateInterface__factory {
  static readonly abi = _abi;
  static createInterface(): VDelegateInterfaceInterface {
    return new utils.Interface(_abi) as VDelegateInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VDelegateInterface {
    return new Contract(address, _abi, signerOrProvider) as VDelegateInterface;
  }
}
