/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  AccessControlManager,
  AccessControlManagerInterface,
} from "../../../contracts/Governance/AccessControlManager";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
    ],
    name: "PermissionGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
    ],
    name: "PermissionRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
      {
        internalType: "address",
        name: "accountToPermit",
        type: "address",
      },
    ],
    name: "giveCallPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
    ],
    name: "isAllowedToCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "functionSig",
        type: "string",
      },
      {
        internalType: "address",
        name: "accountToRevoke",
        type: "address",
      },
    ],
    name: "revokeCallPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001c600033610021565b6100cd565b61002b828261002f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661002b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100893390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610f36806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063545f7a321161008157806391d148541161005b57806391d148541461019b578063a217fddf146101df578063d547741f146101e757600080fd5b8063545f7a3214610162578063584f6b601461017557806382bfd0f01461018857600080fd5b8063248a9ca3116100b2578063248a9ca3146101095780632f2ff15d1461013a57806336568abe1461014f57600080fd5b806301ffc9a7146100ce57806318c5e8ab146100f6575b600080fd5b6100e16100dc366004610a65565b6101fa565b60405190151581526020015b60405180910390f35b6100e1610104366004610b8c565b610293565b61012c610117366004610bda565b60009081526020819052604090206001015490565b6040519081526020016100ed565b61014d610148366004610bf3565b610364565b005b61014d61015d366004610bf3565b61038e565b61014d610170366004610c1f565b610446565b61014d610183366004610c1f565b6104be565b6100e1610196366004610c7d565b610528565b6100e16101a9366004610bf3565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b61012c600081565b61014d6101f5366004610bf3565b610590565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061028d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60008033836040516020016102a9929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8916825290935291205490915060ff161561030057600191505061028d565b600083604051602001610314929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8916825290935291205490915060ff16949350505050565b60008281526020819052604090206001015461037f816105b5565b61038983836105c2565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61044282826106b2565b5050565b6000838360405160200161045b929190610cff565b60405160208183030381529060405280519060200120905061047d8183610590565b7f55426a61e90ac7d7d1fc886b67b420ade8c8b535e68d655394bc271e3a12b8e28285856040516104b093929190610d76565b60405180910390a150505050565b600083836040516020016104d3929190610cff565b6040516020818303038152906040528051906020012090506104f58183610364565b7f69c5ce2d658fea352a2464f87ffbe1f09746c918a91da0994044c3767d641b3f8285856040516104b093929190610d76565b600080838360405160200161053e929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8a16825290935291205490915060ff165b95945050505050565b6000828152602081905260409020600101546105ab816105b5565b61038983836106b2565b6105bf8133610769565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104425760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556106543390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156104425760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610442576107bf8173ffffffffffffffffffffffffffffffffffffffff16601461081b565b6107ca83602061081b565b6040516020016107db929190610daf565b60408051601f19818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261042f91600401610e30565b6060600061082a836002610e72565b610835906002610e89565b67ffffffffffffffff81111561084d5761084d610ad0565b6040519080825280601f01601f191660200182016040528015610877576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106108ae576108ae610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061091157610911610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061094d846002610e72565b610958906001610e89565b90505b60018111156109f5577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061099957610999610e9c565b1a60f81b8282815181106109af576109af610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936109ee81610ecb565b905061095b565b508315610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161042f565b9392505050565b600060208284031215610a7757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610a5e57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610acb57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610b1057600080fd5b813567ffffffffffffffff80821115610b2b57610b2b610ad0565b604051601f8301601f19908116603f01168101908282118183101715610b5357610b53610ad0565b81604052838152866020858801011115610b6c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b9f57600080fd5b610ba883610aa7565b9150602083013567ffffffffffffffff811115610bc457600080fd5b610bd085828601610aff565b9150509250929050565b600060208284031215610bec57600080fd5b5035919050565b60008060408385031215610c0657600080fd5b82359150610c1660208401610aa7565b90509250929050565b600080600060608486031215610c3457600080fd5b610c3d84610aa7565b9250602084013567ffffffffffffffff811115610c5957600080fd5b610c6586828701610aff565b925050610c7460408501610aa7565b90509250925092565b600080600060608486031215610c9257600080fd5b610c9b84610aa7565b9250610ca960208501610aa7565b9150604084013567ffffffffffffffff811115610cc557600080fd5b610cd186828701610aff565b9150509250925092565b60005b83811015610cf6578181015183820152602001610cde565b50506000910152565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16815260008251610d3c816014850160208701610cdb565b919091016014019392505050565b60008151808452610d62816020860160208601610cdb565b601f01601f19169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526105876060830184610d4a565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610de7816017850160208801610cdb565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610e24816028840160208801610cdb565b01602801949350505050565b602081526000610a5e6020830184610d4a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761028d5761028d610e43565b8082018082111561028d5761028d610e43565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610eda57610eda610e43565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122064c4828d6eb683292748fe03cec290f525069ccad33e201faadb6ee4aca9347f64736f6c63430008110033";

type AccessControlManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlManager__factory extends ContractFactory {
  constructor(...args: AccessControlManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessControlManager> {
    return super.deploy(overrides || {}) as Promise<AccessControlManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlManager {
    return super.attach(address) as AccessControlManager;
  }
  override connect(signer: Signer): AccessControlManager__factory {
    return super.connect(signer) as AccessControlManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlManagerInterface {
    return new utils.Interface(_abi) as AccessControlManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlManager;
  }
}
