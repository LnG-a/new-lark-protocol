/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from ".";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";
import { ethers } from "ethers";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "BEP20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEP20Interface__factory>;
    getContractFactory(
      name: "Comptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comptroller__factory>;
    getContractFactory(
      name: "ComptrollerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerInterface__factory>;
    getContractFactory(
      name: "ComptrollerInterfaceG1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerInterfaceG1__factory>;
    getContractFactory(
      name: "ComptrollerInterfaceG2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerInterfaceG2__factory>;
    getContractFactory(
      name: "IComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComptroller__factory>;
    getContractFactory(
      name: "INAIVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INAIVault__factory>;
    getContractFactory(
      name: "ComptrollerLensInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerLensInterface__factory>;
    getContractFactory(
      name: "ComptrollerV1Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV1Storage__factory>;
    getContractFactory(
      name: "ComptrollerV2Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV2Storage__factory>;
    getContractFactory(
      name: "ComptrollerV3Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV3Storage__factory>;
    getContractFactory(
      name: "ComptrollerV4Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV4Storage__factory>;
    getContractFactory(
      name: "ComptrollerV5Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV5Storage__factory>;
    getContractFactory(
      name: "ComptrollerV6Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV6Storage__factory>;
    getContractFactory(
      name: "ComptrollerV7Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV7Storage__factory>;
    getContractFactory(
      name: "ComptrollerV8Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV8Storage__factory>;
    getContractFactory(
      name: "ComptrollerV9Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV9Storage__factory>;
    getContractFactory(
      name: "UnitrollerAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnitrollerAdminStorage__factory>;
    getContractFactory(
      name: "Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Context__factory>;
    getContractFactory(
      name: "DAIInterestRateModelV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DAIInterestRateModelV2__factory>;
    getContractFactory(
      name: "JugLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JugLike__factory>;
    getContractFactory(
      name: "PotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PotLike__factory>;
    getContractFactory(
      name: "EIP20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP20Interface__factory>;
    getContractFactory(
      name: "EIP20NonStandardInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP20NonStandardInterface__factory>;
    getContractFactory(
      name: "ComptrollerErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerErrorReporter__factory>;
    getContractFactory(
      name: "NAIControllerErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIControllerErrorReporter__factory>;
    getContractFactory(
      name: "TokenErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenErrorReporter__factory>;
    getContractFactory(
      name: "Faucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Faucet__factory>;
    getContractFactory(
      name: "FlashLiquidateAndSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLiquidateAndSwap__factory>;
    getContractFactory(
      name: "INBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INBNB__factory>;
    getContractFactory(
      name: "INToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INToken__factory>;
    getContractFactory(
      name: "IPancakeCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeCallee__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "AccessControlManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlManager__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "NWLInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLInterface__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha2__factory>;
    getContractFactory(
      name: "NWLInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLInterface__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "GovernorBravoDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegate__factory>;
    getContractFactory(
      name: "GovernorBravoDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegator__factory>;
    getContractFactory(
      name: "GovernorAlphaInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlphaInterface__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV1__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV2__factory>;
    getContractFactory(
      name: "GovernorBravoDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorBravoEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoEvents__factory>;
    getContractFactory(
      name: "NwlVaultInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NwlVaultInterface__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "NWL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWL__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "Tokenlock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tokenlock__factory>;
    getContractFactory(
      name: "ApproveAndCallFallBack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ApproveAndCallFallBack__factory>;
    getContractFactory(
      name: "SXP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SXP__factory>;
    getContractFactory(
      name: "Tokenlock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tokenlock__factory>;
    getContractFactory(
      name: "UserLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserLock__factory>;
    getContractFactory(
      name: "IAccessControlManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlManager__factory>;
    getContractFactory(
      name: "InterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestRateModel__factory>;
    getContractFactory(
      name: "JumpRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JumpRateModel__factory>;
    getContractFactory(
      name: "ComptrollerLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerLens__factory>;
    getContractFactory(
      name: "InterestRateModelLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestRateModelLens__factory>;
    getContractFactory(
      name: "NarwhalLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NarwhalLens__factory>;
    getContractFactory(
      name: "SnapshotLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotLens__factory>;
    getContractFactory(
      name: "Liquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidator__factory>;
    getContractFactory(
      name: "Maximillion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Maximillion__factory>;
    getContractFactory(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibNote__factory>;
    getContractFactory(
      name: "NAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAI__factory>;
    getContractFactory(
      name: "ComptrollerImplInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerImplInterface__factory>;
    getContractFactory(
      name: "NAIController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIController__factory>;
    getContractFactory(
      name: "NAIControllerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIControllerInterface__factory>;
    getContractFactory(
      name: "NAIControllerStorageG1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIControllerStorageG1__factory>;
    getContractFactory(
      name: "NAIControllerStorageG2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIControllerStorageG2__factory>;
    getContractFactory(
      name: "NAIUnitrollerAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIUnitrollerAdminStorage__factory>;
    getContractFactory(
      name: "NAIUnitroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIUnitroller__factory>;
    getContractFactory(
      name: "NarwhalChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NarwhalChainlinkOracle__factory>;
    getContractFactory(
      name: "NarwhalChainlinkOracleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NarwhalChainlinkOracleV2__factory>;
    getContractFactory(
      name: "IStdReference",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStdReference__factory>;
    getContractFactory(
      name: "NarwhalPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NarwhalPriceOracle__factory>;
    getContractFactory(
      name: "NBep20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20__factory>;
    getContractFactory(
      name: "NBep20Delegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20Delegate__factory>;
    getContractFactory(
      name: "NBep20Delegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20Delegator__factory>;
    getContractFactory(
      name: "NBep20Immutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20Immutable__factory>;
    getContractFactory(
      name: "NBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBNB__factory>;
    getContractFactory(
      name: "DaiJoinLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiJoinLike__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "NDaiDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NDaiDelegate__factory>;
    getContractFactory(
      name: "PotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PotLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "NNwlLikeDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NNwlLikeDelegate__factory>;
    getContractFactory(
      name: "NwlLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NwlLike__factory>;
    getContractFactory(
      name: "NToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NToken__factory>;
    getContractFactory(
      name: "NBep20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20Interface__factory>;
    getContractFactory(
      name: "NBep20Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NBep20Storage__factory>;
    getContractFactory(
      name: "NTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NTokenInterface__factory>;
    getContractFactory(
      name: "NTokenStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NTokenStorage__factory>;
    getContractFactory(
      name: "VDelegateInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VDelegateInterface__factory>;
    getContractFactory(
      name: "VDelegationStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VDelegationStorage__factory>;
    getContractFactory(
      name: "VDelegatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VDelegatorInterface__factory>;
    getContractFactory(
      name: "NTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NTreasury__factory>;
    getContractFactory(
      name: "NWLStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLStore__factory>;
    getContractFactory(
      name: "INWLStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INWLStore__factory>;
    getContractFactory(
      name: "NWLVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVault__factory>;
    getContractFactory(
      name: "NWLVaultErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVaultErrorReporter__factory>;
    getContractFactory(
      name: "NWLVaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVaultProxy__factory>;
    getContractFactory(
      name: "NWLVaultAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVaultAdminStorage__factory>;
    getContractFactory(
      name: "NWLVaultStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVaultStorage__factory>;
    getContractFactory(
      name: "NWLVaultStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVaultStorageV1__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "PriceOracleProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracleProxy__factory>;
    getContractFactory(
      name: "V1PriceOracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V1PriceOracleInterface__factory>;
    getContractFactory(
      name: "Reservoir",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reservoir__factory>;
    getContractFactory(
      name: "SimplePriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimplePriceOracle__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "MockToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockToken__factory>;
    getContractFactory(
      name: "VRT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRT__factory>;
    getContractFactory(
      name: "Unitroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unitroller__factory>;
    getContractFactory(
      name: "IBEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBEP20__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Tokenlock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tokenlock__factory>;
    getContractFactory(
      name: "WithAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WithAdmin__factory>;
    getContractFactory(
      name: "NAIVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIVault__factory>;
    getContractFactory(
      name: "NAIVaultErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIVaultErrorReporter__factory>;
    getContractFactory(
      name: "NAIVaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIVaultProxy__factory>;
    getContractFactory(
      name: "NAIVaultAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIVaultAdminStorage__factory>;
    getContractFactory(
      name: "NAIVaultStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAIVaultStorage__factory>;
    getContractFactory(
      name: "INWLVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INWLVesting__factory>;
    getContractFactory(
      name: "NWLVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVesting__factory>;
    getContractFactory(
      name: "NWLVestingProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVestingProxy__factory>;
    getContractFactory(
      name: "NWLVestingAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVestingAdminStorage__factory>;
    getContractFactory(
      name: "NWLVestingStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NWLVestingStorage__factory>;
    getContractFactory(
      name: "VRTConverter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTConverter__factory>;
    getContractFactory(
      name: "VRTConverterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTConverterProxy__factory>;
    getContractFactory(
      name: "VRTConverterAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTConverterAdminStorage__factory>;
    getContractFactory(
      name: "VRTConverterStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTConverterStorage__factory>;
    getContractFactory(
      name: "VRTVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTVault__factory>;
    getContractFactory(
      name: "VRTVaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTVaultProxy__factory>;
    getContractFactory(
      name: "VRTVaultAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTVaultAdminStorage__factory>;
    getContractFactory(
      name: "VRTVaultStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRTVaultStorage__factory>;
    getContractFactory(
      name: "WhitePaperInterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitePaperInterestRateModel__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "BEP20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEP20Interface>;
    getContractAt(
      name: "Comptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Comptroller>;
    getContractAt(
      name: "ComptrollerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerInterface>;
    getContractAt(
      name: "ComptrollerInterfaceG1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerInterfaceG1>;
    getContractAt(
      name: "ComptrollerInterfaceG2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerInterfaceG2>;
    getContractAt(
      name: "IComptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IComptroller>;
    getContractAt(
      name: "INAIVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INAIVault>;
    getContractAt(
      name: "ComptrollerLensInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerLensInterface>;
    getContractAt(
      name: "ComptrollerV1Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV1Storage>;
    getContractAt(
      name: "ComptrollerV2Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV2Storage>;
    getContractAt(
      name: "ComptrollerV3Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV3Storage>;
    getContractAt(
      name: "ComptrollerV4Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV4Storage>;
    getContractAt(
      name: "ComptrollerV5Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV5Storage>;
    getContractAt(
      name: "ComptrollerV6Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV6Storage>;
    getContractAt(
      name: "ComptrollerV7Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV7Storage>;
    getContractAt(
      name: "ComptrollerV8Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV8Storage>;
    getContractAt(
      name: "ComptrollerV9Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV9Storage>;
    getContractAt(
      name: "UnitrollerAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnitrollerAdminStorage>;
    getContractAt(
      name: "Context",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Context>;
    getContractAt(
      name: "DAIInterestRateModelV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DAIInterestRateModelV2>;
    getContractAt(
      name: "JugLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JugLike>;
    getContractAt(
      name: "PotLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PotLike>;
    getContractAt(
      name: "EIP20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP20Interface>;
    getContractAt(
      name: "EIP20NonStandardInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP20NonStandardInterface>;
    getContractAt(
      name: "ComptrollerErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerErrorReporter>;
    getContractAt(
      name: "NAIControllerErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIControllerErrorReporter>;
    getContractAt(
      name: "TokenErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenErrorReporter>;
    getContractAt(
      name: "Faucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Faucet>;
    getContractAt(
      name: "FlashLiquidateAndSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLiquidateAndSwap>;
    getContractAt(
      name: "INBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INBNB>;
    getContractAt(
      name: "INToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INToken>;
    getContractAt(
      name: "IPancakeCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeCallee>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "AccessControlManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlManager>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "NWLInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLInterface>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "GovernorAlpha2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha2>;
    getContractAt(
      name: "NWLInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLInterface>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "GovernorBravoDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegate>;
    getContractAt(
      name: "GovernorBravoDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegator>;
    getContractAt(
      name: "GovernorAlphaInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlphaInterface>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV1>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV2>;
    getContractAt(
      name: "GovernorBravoDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegatorStorage>;
    getContractAt(
      name: "GovernorBravoEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoEvents>;
    getContractAt(
      name: "NwlVaultInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NwlVaultInterface>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "NWL",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWL>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "Tokenlock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Tokenlock>;
    getContractAt(
      name: "ApproveAndCallFallBack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ApproveAndCallFallBack>;
    getContractAt(
      name: "SXP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SXP>;
    getContractAt(
      name: "Tokenlock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Tokenlock>;
    getContractAt(
      name: "UserLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UserLock>;
    getContractAt(
      name: "IAccessControlManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlManager>;
    getContractAt(
      name: "InterestRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestRateModel>;
    getContractAt(
      name: "JumpRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JumpRateModel>;
    getContractAt(
      name: "ComptrollerLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerLens>;
    getContractAt(
      name: "InterestRateModelLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestRateModelLens>;
    getContractAt(
      name: "NarwhalLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NarwhalLens>;
    getContractAt(
      name: "SnapshotLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SnapshotLens>;
    getContractAt(
      name: "Liquidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Liquidator>;
    getContractAt(
      name: "Maximillion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Maximillion>;
    getContractAt(
      name: "LibNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibNote>;
    getContractAt(
      name: "NAI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAI>;
    getContractAt(
      name: "ComptrollerImplInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerImplInterface>;
    getContractAt(
      name: "NAIController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIController>;
    getContractAt(
      name: "NAIControllerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIControllerInterface>;
    getContractAt(
      name: "NAIControllerStorageG1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIControllerStorageG1>;
    getContractAt(
      name: "NAIControllerStorageG2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIControllerStorageG2>;
    getContractAt(
      name: "NAIUnitrollerAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIUnitrollerAdminStorage>;
    getContractAt(
      name: "NAIUnitroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIUnitroller>;
    getContractAt(
      name: "NarwhalChainlinkOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NarwhalChainlinkOracle>;
    getContractAt(
      name: "NarwhalChainlinkOracleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NarwhalChainlinkOracleV2>;
    getContractAt(
      name: "IStdReference",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStdReference>;
    getContractAt(
      name: "NarwhalPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NarwhalPriceOracle>;
    getContractAt(
      name: "NBep20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20>;
    getContractAt(
      name: "NBep20Delegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20Delegate>;
    getContractAt(
      name: "NBep20Delegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20Delegator>;
    getContractAt(
      name: "NBep20Immutable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20Immutable>;
    getContractAt(
      name: "NBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBNB>;
    getContractAt(
      name: "DaiJoinLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiJoinLike>;
    getContractAt(
      name: "GemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "NDaiDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NDaiDelegate>;
    getContractAt(
      name: "PotLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PotLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "NNwlLikeDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NNwlLikeDelegate>;
    getContractAt(
      name: "NwlLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NwlLike>;
    getContractAt(
      name: "NToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NToken>;
    getContractAt(
      name: "NBep20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20Interface>;
    getContractAt(
      name: "NBep20Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NBep20Storage>;
    getContractAt(
      name: "NTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NTokenInterface>;
    getContractAt(
      name: "NTokenStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NTokenStorage>;
    getContractAt(
      name: "VDelegateInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VDelegateInterface>;
    getContractAt(
      name: "VDelegationStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VDelegationStorage>;
    getContractAt(
      name: "VDelegatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VDelegatorInterface>;
    getContractAt(
      name: "NTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NTreasury>;
    getContractAt(
      name: "NWLStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLStore>;
    getContractAt(
      name: "INWLStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INWLStore>;
    getContractAt(
      name: "NWLVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVault>;
    getContractAt(
      name: "NWLVaultErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVaultErrorReporter>;
    getContractAt(
      name: "NWLVaultProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVaultProxy>;
    getContractAt(
      name: "NWLVaultAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVaultAdminStorage>;
    getContractAt(
      name: "NWLVaultStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVaultStorage>;
    getContractAt(
      name: "NWLVaultStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVaultStorageV1>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "PriceOracleProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracleProxy>;
    getContractAt(
      name: "V1PriceOracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V1PriceOracleInterface>;
    getContractAt(
      name: "Reservoir",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reservoir>;
    getContractAt(
      name: "SimplePriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimplePriceOracle>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "MockToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockToken>;
    getContractAt(
      name: "VRT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRT>;
    getContractAt(
      name: "Unitroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Unitroller>;
    getContractAt(
      name: "IBEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBEP20>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Tokenlock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Tokenlock>;
    getContractAt(
      name: "WithAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WithAdmin>;
    getContractAt(
      name: "NAIVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIVault>;
    getContractAt(
      name: "NAIVaultErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIVaultErrorReporter>;
    getContractAt(
      name: "NAIVaultProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIVaultProxy>;
    getContractAt(
      name: "NAIVaultAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIVaultAdminStorage>;
    getContractAt(
      name: "NAIVaultStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAIVaultStorage>;
    getContractAt(
      name: "INWLVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INWLVesting>;
    getContractAt(
      name: "NWLVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVesting>;
    getContractAt(
      name: "NWLVestingProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVestingProxy>;
    getContractAt(
      name: "NWLVestingAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVestingAdminStorage>;
    getContractAt(
      name: "NWLVestingStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NWLVestingStorage>;
    getContractAt(
      name: "VRTConverter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTConverter>;
    getContractAt(
      name: "VRTConverterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTConverterProxy>;
    getContractAt(
      name: "VRTConverterAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTConverterAdminStorage>;
    getContractAt(
      name: "VRTConverterStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTConverterStorage>;
    getContractAt(
      name: "VRTVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTVault>;
    getContractAt(
      name: "VRTVaultProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTVaultProxy>;
    getContractAt(
      name: "VRTVaultAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTVaultAdminStorage>;
    getContractAt(
      name: "VRTVaultStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VRTVaultStorage>;
    getContractAt(
      name: "WhitePaperInterestRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhitePaperInterestRateModel>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
