{"id":"5695edac39cda4099aa66f0807eea27a","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Governance/AccessControlManager.sol":{"content":"// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity 0.8.17;\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title Venus Access Control Contract\r\n * @author 0xLucian\r\n * @dev This contract is a wrapper of OpenZeppelin AccessControl\r\n *\t\textending it in a way to standartize access control\r\n *\t\twithin Venus Smart Contract Ecosystem\r\n */\r\ncontract AccessControlManager is AccessControl {\r\n    /// @notice Emitted when an account is given a permission to a certain contract function\r\n    /// @dev If contract address is 0x000..0 this means that the account is a default admin of this function and\r\n    /// can call any contract function with this signature\r\n    event PermissionGranted(address account, address contractAddress, string functionSig);\r\n\r\n    /// @notice Emitted when an account is revoked a permission to a certain contract function\r\n    event PermissionRevoked(address account, address contractAddress, string functionSig);\r\n\r\n    constructor() {\r\n        // Grant the contract deployer the default admin role: it will be able\r\n        // to grant and revoke any roles\r\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Verifies if the given account can call a contract's guarded function\r\n     * @dev Since restricted contracts using this function as a permission hook, we can get contracts address with msg.sender\r\n     * @param account for which call permissions will be checked\r\n     * @param functionSig restricted function signature e.g. \"functionName(uint256,bool)\"\r\n     * @return false if the user account cannot call the particular contract function\r\n     *\r\n     */\r\n    function isAllowedToCall(address account, string memory functionSig) public view returns (bool) {\r\n        bytes32 role = keccak256(abi.encodePacked(msg.sender, functionSig));\r\n\r\n        if (hasRole(role, account)) {\r\n            return true;\r\n        } else {\r\n            role = keccak256(abi.encodePacked(address(0), functionSig));\r\n            return hasRole(role, account);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Verifies if the given account can call a contract's guarded function\r\n     * @dev This function is used as a view function to check permissions rather than contract hook for access restriction check.\r\n     * @param account for which call permissions will be checked against\r\n     * @param contractAddress address of the restricted contract\r\n     * @param functionSig signature of the restricted function e.g. \"functionName(uint256,bool)\"\r\n     * @return false if the user account cannot call the particular contract function\r\n     */\r\n    function hasPermission(\r\n        address account,\r\n        address contractAddress,\r\n        string memory functionSig\r\n    ) public view returns (bool) {\r\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\r\n        return hasRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @notice Gives a function call permission to one single account\r\n     * @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\r\n     * @param contractAddress address of contract for which call permissions will be granted\r\n     * @dev if contractAddress is zero address, the account can access the specified function\r\n     *      on **any** contract managed by this ACL\r\n     * @param functionSig signature e.g. \"functionName(uint256,bool)\"\r\n     * @param accountToPermit account that will be given access to the contract function\r\n     * @custom:events Emits a {RoleGranted} and {PermissionGranted} events.\r\n     */\r\n    function giveCallPermission(\r\n        address contractAddress,\r\n        string memory functionSig,\r\n        address accountToPermit\r\n    ) public {\r\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\r\n        grantRole(role, accountToPermit);\r\n        emit PermissionGranted(accountToPermit, contractAddress, functionSig);\r\n    }\r\n\r\n    /**\r\n     * @notice Revokes an account's permission to a particular function call\r\n     * @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\r\n     * \t\tMay emit a {RoleRevoked} event.\r\n     * @param contractAddress address of contract for which call permissions will be revoked\r\n     * @param functionSig signature e.g. \"functionName(uint256,bool)\"\r\n     * @custom:events Emits {RoleRevoked} and {PermissionRevoked} events.\r\n     */\r\n    function revokeCallPermission(\r\n        address contractAddress,\r\n        string memory functionSig,\r\n        address accountToRevoke\r\n    ) public {\r\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\r\n        revokeRole(role, accountToRevoke);\r\n        emit PermissionRevoked(accountToRevoke, contractAddress, functionSig);\r\n    }\r\n}"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"outputSelection":{"*":{"*":["storageLayout","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[319],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Strings":[640]},"id":320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":393,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":415,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":641,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":665,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1841:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":414,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1850:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":392,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1866:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":319,"linearizedBaseContracts":[319,664,676,392,414],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":319,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":319,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["1996:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":319,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[663],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$392_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$392_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$392","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2750:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$319_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2771:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":663,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":319,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[359],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3017:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":319,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":135,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":319,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"3791:419:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":133,"nodeType":"IfStatement","src":"3801:403:0","trueBody":{"id":132,"nodeType":"Block","src":"3830:374:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"arguments":[{"id":115,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4017:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"4009:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"3230","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4027:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$640_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3997:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":619,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4056:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4129:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":120,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4101:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$640_$","typeString":"type(library Strings)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4109:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":619,"src":"4101:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4101:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:265:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:311:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:349:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"3844:349:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":135,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":135,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":319,"src":"3718:492:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[367],"body":{"id":149,"nodeType":"Block","src":"4474:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":144,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4491:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":146,"indexExpression":{"id":145,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4498:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4491:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4504:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4491:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":143,"id":148,"nodeType":"Return","src":"4484:29:0"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"4216:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":150,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4400:12:0","nodeType":"FunctionDefinition","overrides":{"id":140,"nodeType":"OverrideSpecifier","overrides":[],"src":"4447:8:0"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"role","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4413:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4412:14:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"4465:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4464:9:0"},"scope":319,"src":"4391:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":169,"nodeType":"Block","src":"4919:42:0","statements":[{"expression":{"arguments":[{"id":165,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":164,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4929:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4929:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"4929:25:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4526:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":170,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":160,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":159,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4899:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4899:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":162,"kind":"modifierInvocation","modifierName":{"id":158,"name":"onlyRole","nameLocations":["4890:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4890:8:0"},"nodeType":"ModifierInvocation","src":"4890:28:0"}],"name":"grantRole","nameLocation":"4825:9:0","nodeType":"FunctionDefinition","overrides":{"id":157,"nodeType":"OverrideSpecifier","overrides":[],"src":"4881:8:0"},"parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4843:4:0","nodeType":"VariableDeclaration","scope":170,"src":"4835:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4835:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"4857:7:0","nodeType":"VariableDeclaration","scope":170,"src":"4849:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"4849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4834:31:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"4919:0:0"},"scope":319,"src":"4816:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[383],"body":{"id":189,"nodeType":"Block","src":"5345:43:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5367:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5373:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"5355:26:0"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"4967:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5338:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"5325:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5316:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5316:8:0"},"nodeType":"ModifierInvocation","src":"5316:28:0"}],"name":"revokeRole","nameLocation":"5250:10:0","nodeType":"FunctionDefinition","overrides":{"id":177,"nodeType":"OverrideSpecifier","overrides":[],"src":"5307:8:0"},"parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"role","nameLocation":"5269:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5261:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"account","nameLocation":"5283:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"5275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5260:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5345:0:0"},"scope":319,"src":"5241:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[391],"body":{"id":212,"nodeType":"Block","src":"6002:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6031:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6031:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6020:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6045:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"6012:83:0"},{"expression":{"arguments":[{"id":208,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"6118:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6124:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":207,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"6106:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"6106:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5394:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":213,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5934:12:0","nodeType":"FunctionDefinition","overrides":{"id":197,"nodeType":"OverrideSpecifier","overrides":[],"src":"5993:8:0"},"parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5955:4:0","nodeType":"VariableDeclaration","scope":213,"src":"5947:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5969:7:0","nodeType":"VariableDeclaration","scope":213,"src":"5961:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5961:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5946:31:0"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"6002:0:0"},"scope":319,"src":"5925:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":226,"nodeType":"Block","src":"6892:42:0","statements":[{"expression":{"arguments":[{"id":222,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6913:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6902:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6902:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"ExpressionStatement","src":"6902:25:0"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"6145:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6833:10:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"role","nameLocation":"6852:4:0","nodeType":"VariableDeclaration","scope":227,"src":"6844:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"account","nameLocation":"6866:7:0","nodeType":"VariableDeclaration","scope":227,"src":"6858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"6858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6843:31:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"6892:0:0"},"scope":319,"src":"6824:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"7132:174:0","statements":[{"assignments":[236],"declarations":[{"constant":false,"id":236,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7150:17:0","nodeType":"VariableDeclaration","scope":254,"src":"7142:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":240,"initialValue":{"arguments":[{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7183:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":237,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"7170:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7170:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7142:46:0"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":241,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7198:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":243,"indexExpression":{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7205:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7198:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7211:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7198:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7223:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7198:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":247,"nodeType":"ExpressionStatement","src":"7198:34:0"},{"eventCall":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7264:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7270:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":251,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7289:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7247:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"EmitStatement","src":"7242:57:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"6940:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7068:13:0","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"role","nameLocation":"7090:4:0","nodeType":"VariableDeclaration","scope":255,"src":"7082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7082:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"adminRole","nameLocation":"7104:9:0","nodeType":"VariableDeclaration","scope":255,"src":"7096:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7081:33:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"7132:0:0"},"scope":319,"src":"7059:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":286,"nodeType":"Block","src":"7542:165:0","statements":[{"condition":{"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7556:23:0","subExpression":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7571:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7557:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7557:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"IfStatement","src":"7552:149:0","trueBody":{"id":284,"nodeType":"Block","src":"7581:120:0","statements":[{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":268,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7595:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":270,"indexExpression":{"id":269,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7602:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7595:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7608:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7595:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":273,"indexExpression":{"id":272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7616:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7595:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7627:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7595:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":276,"nodeType":"ExpressionStatement","src":"7595:36:0"},{"eventCall":{"arguments":[{"id":278,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7662:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7668:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":280,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"7677:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7677:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":277,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7650:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7650:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"EmitStatement","src":"7645:45:0"}]}}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"7312:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":287,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7483:10:0","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"role","nameLocation":"7502:4:0","nodeType":"VariableDeclaration","scope":287,"src":"7494:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7494:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"account","nameLocation":"7516:7:0","nodeType":"VariableDeclaration","scope":287,"src":"7508:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"7508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7493:31:0"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"7542:0:0"},"scope":319,"src":"7474:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"7947:165:0","statements":[{"condition":{"arguments":[{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7969:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7961:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7961:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"7957:149:0","trueBody":{"id":315,"nodeType":"Block","src":"7985:121:0","statements":[{"expression":{"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":299,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7999:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":301,"indexExpression":{"id":300,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8006:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7999:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8012:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7999:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":304,"indexExpression":{"id":303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7999:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8031:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7999:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":307,"nodeType":"ExpressionStatement","src":"7999:37:0"},{"eventCall":{"arguments":[{"id":309,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8082:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":308,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8055:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8055:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"8050:45:0"}]}}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"7713:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7887:11:0","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"role","nameLocation":"7907:4:0","nodeType":"VariableDeclaration","scope":318,"src":"7899:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"7921:7:0","nodeType":"VariableDeclaration","scope":318,"src":"7913:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7898:31:0"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"7947:0:0"},"scope":319,"src":"7878:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":320,"src":"1806:6308:0","usedErrors":[]}],"src":"108:8007:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[392]},"id":393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":392,"linearizedBaseContracts":[392],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":331,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":331,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":327,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":331,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":331,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":340,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":340,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":340,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":340,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":349,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":349,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":349,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":349,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":359,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":359,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":392,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":367,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":367,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":392,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":375,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":375,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":392,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":383,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":383,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":392,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":391,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":391,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":392,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":393,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[414]},"id":415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":394,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":414,"linearizedBaseContracts":[414],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":403,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:2","memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":399,"id":402,"nodeType":"Return","src":"712:17:2"}]},"id":404,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":414,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:2","memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":408,"id":411,"nodeType":"Return","src":"819:15:2"}]},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":414,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":415,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[640]},"id":641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":416,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"126:34:3","text":" @dev String operations."},"fullyImplemented":true,"id":640,"linearizedBaseContracts":[640],"name":"Strings","nameLocation":"169:7:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":420,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:3","nodeType":"VariableDeclaration","scope":640,"src":"183:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":418,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":423,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:3","nodeType":"VariableDeclaration","scope":640,"src":"247:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":421,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":501,"nodeType":"Block","src":"463:632:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"665:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"IfStatement","src":"661:51:3","trueBody":{"id":436,"nodeType":"Block","src":"677:35:3","statements":[{"expression":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":430,"id":435,"nodeType":"Return","src":"691:10:3"}]}},{"assignments":[439],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"temp","nameLocation":"729:4:3","nodeType":"VariableDeclaration","scope":501,"src":"721:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":441,"initialValue":{"id":440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"736:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:3"},{"assignments":[443],"declarations":[{"constant":false,"id":443,"mutability":"mutable","name":"digits","nameLocation":"759:6:3","nodeType":"VariableDeclaration","scope":501,"src":"751:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":444,"nodeType":"VariableDeclarationStatement","src":"751:14:3"},{"body":{"id":455,"nodeType":"Block","src":"793:57:3","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:3","subExpression":{"id":448,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"807:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"807:8:3"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"829:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"829:10:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"782:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"WhileStatement","src":"775:75:3"},{"assignments":[458],"declarations":[{"constant":false,"id":458,"mutability":"mutable","name":"buffer","nameLocation":"872:6:3","nodeType":"VariableDeclaration","scope":501,"src":"859:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":463,"initialValue":{"arguments":[{"id":461,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"891:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":459,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:3"},{"body":{"id":494,"nodeType":"Block","src":"927:131:3","statements":[{"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":467,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"941:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":470,"nodeType":"ExpressionStatement","src":"941:11:3"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":471,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"966:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":473,"indexExpression":{"id":472,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"973:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"1009:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:3","typeDescriptions":{}}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":476,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:3","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":474,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:3","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":489,"nodeType":"ExpressionStatement","src":"966:56:3"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"1036:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":493,"nodeType":"ExpressionStatement","src":"1036:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"915:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":495,"nodeType":"WhileStatement","src":"908:150:3"},{"expression":{"arguments":[{"id":498,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"1081:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:3","typeDescriptions":{}}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":430,"id":500,"nodeType":"Return","src":"1067:21:3"}]},"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"297:90:3","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":502,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:3","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"value","nameLocation":"418:5:3","nodeType":"VariableDeclaration","scope":502,"src":"410:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:3"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"448:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":428,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:3"},"scope":640,"src":"392:703:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"1274:255:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1288:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"nodeType":"IfStatement","src":"1284:54:3","trueBody":{"id":515,"nodeType":"Block","src":"1300:38:3","statements":[{"expression":{"hexValue":"30783030","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":509,"id":514,"nodeType":"Return","src":"1314:13:3"}]}},{"assignments":[518],"declarations":[{"constant":false,"id":518,"mutability":"mutable","name":"temp","nameLocation":"1355:4:3","nodeType":"VariableDeclaration","scope":542,"src":"1347:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"initialValue":{"id":519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:3"},{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"length","nameLocation":"1385:6:3","nodeType":"VariableDeclaration","scope":542,"src":"1377:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":524,"initialValue":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:3"},{"body":{"id":535,"nodeType":"Block","src":"1423:57:3","statements":[{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:3","subExpression":{"id":528,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1437:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"nodeType":"ExpressionStatement","src":"1437:8:3"},{"expression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":531,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"1459:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"nodeType":"ExpressionStatement","src":"1459:10:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"1412:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"WhileStatement","src":"1405:75:3"},{"expression":{"arguments":[{"id":538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1508:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":539,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1515:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":537,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[543,619,639],"referencedDeclaration":619,"src":"1496:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1496:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":509,"id":541,"nodeType":"Return","src":"1489:33:3"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"1101:94:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:3","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"value","nameLocation":"1229:5:3","nodeType":"VariableDeclaration","scope":543,"src":"1221:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:3"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"1259:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":507,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:3"},"scope":640,"src":"1200:329:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":618,"nodeType":"Block","src":"1742:351:3","statements":[{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:3","nodeType":"VariableDeclaration","scope":618,"src":"1752:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":563,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":558,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1788:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":555,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:3"},{"expression":{"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":564,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1809:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":566,"indexExpression":{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":569,"nodeType":"ExpressionStatement","src":"1809:15:3"},{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":570,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1834:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":572,"indexExpression":{"hexValue":"31","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":575,"nodeType":"ExpressionStatement","src":"1834:15:3"},{"body":{"id":604,"nodeType":"Block","src":"1904:87:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1918:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":592,"indexExpression":{"id":591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"1925:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":593,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1930:12:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":597,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":599,"nodeType":"ExpressionStatement","src":"1918:37:3"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1969:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"1969:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"1892:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"initializationExpression":{"assignments":[577],"declarations":[{"constant":false,"id":577,"mutability":"mutable","name":"i","nameLocation":"1872:1:3","nodeType":"VariableDeclaration","scope":605,"src":"1864:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":583,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":579,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1880:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:3"},"loopExpression":{"expression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:3","subExpression":{"id":587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"1901:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"nodeType":"ExpressionStatement","src":"1899:3:3"},"nodeType":"ForStatement","src":"1859:132:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2008:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"2000:55:3"},{"expression":{"arguments":[{"id":615,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"2079:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:3","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":552,"id":617,"nodeType":"Return","src":"2065:21:3"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"1535:112:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"1681:5:3","nodeType":"VariableDeclaration","scope":619,"src":"1673:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"length","nameLocation":"1696:6:3","nodeType":"VariableDeclaration","scope":619,"src":"1688:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"1727:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:3"},"scope":640,"src":"1652:441:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"2318:76:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":632,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2363:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":630,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:3","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:3","typeDescriptions":{}}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":635,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2371:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":627,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[543,619,639],"referencedDeclaration":619,"src":"2335:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":626,"id":637,"nodeType":"Return","src":"2328:59:3"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2099:141:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:3","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"addr","nameLocation":"2274:4:3","nodeType":"VariableDeclaration","scope":639,"src":"2266:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"2303:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":624,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:3"},"scope":640,"src":"2245:149:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":641,"src":"161:2235:3","usedErrors":[]}],"src":"101:2296:3"},"id":3},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[664],"IERC165":[676]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":665,"sourceUnit":677,"src":"124:23:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":645,"name":"IERC165","nameLocations":["754:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"754:7:4"},"id":646,"nodeType":"InheritanceSpecifier","src":"754:7:4"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"149:576:4","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":664,"linearizedBaseContracts":[664,676],"name":"ERC165","nameLocation":"744:6:4","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[675],"body":{"id":662,"nodeType":"Block","src":"920:64:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"937:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":657,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"957:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$676_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$676_$","typeString":"type(contract IERC165)"}],"id":656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$676","typeString":"type(contract IERC165)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":654,"id":661,"nodeType":"Return","src":"930:47:4"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"768:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":663,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:4","nodeType":"FunctionDefinition","overrides":{"id":651,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:4"},"parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:4","nodeType":"VariableDeclaration","scope":663,"src":"856:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":648,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:4"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"914:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":652,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:4"},"scope":664,"src":"829:155:4","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":665,"src":"726:260:4","usedErrors":[]}],"src":"99:888:4"},"id":4},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[676]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"125:279:5","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":676,"linearizedBaseContracts":[676],"name":"IERC165","nameLocation":"415:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"429:340:5","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":675,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:5","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:5","nodeType":"VariableDeclaration","scope":675,"src":"801:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":669,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:5"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"844:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":672,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:5"},"scope":676,"src":"774:76:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":677,"src":"405:447:5","usedErrors":[]}],"src":"100:753:5"},"id":5},"contracts/Governance/AccessControlManager.sol":{"ast":{"absolutePath":"contracts/Governance/AccessControlManager.sol","exportedSymbols":{"AccessControl":[319],"AccessControlManager":[852],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Strings":[640]},"id":853,"license":"BSD-3-Clause","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:6"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":853,"sourceUnit":320,"src":"67:58:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":681,"name":"AccessControl","nameLocations":["400:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":319,"src":"400:13:6"},"id":682,"nodeType":"InheritanceSpecifier","src":"400:13:6"}],"canonicalName":"AccessControlManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"129:236:6","text":" @title Venus Access Control Contract\n @author 0xLucian\n @dev This contract is a wrapper of OpenZeppelin AccessControl\n\t\textending it in a way to standartize access control\n\t\twithin Venus Smart Contract Ecosystem"},"fullyImplemented":true,"id":852,"linearizedBaseContracts":[852,319,664,676,392,414],"name":"AccessControlManager","nameLocation":"376:20:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"421:262:6","text":"@notice Emitted when an account is given a permission to a certain contract function\n @dev If contract address is 0x000..0 this means that the account is a default admin of this function and\n can call any contract function with this signature"},"eventSelector":"69c5ce2d658fea352a2464f87ffbe1f09746c918a91da0994044c3767d641b3f","id":691,"name":"PermissionGranted","nameLocation":"695:17:6","nodeType":"EventDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"721:7:6","nodeType":"VariableDeclaration","scope":691,"src":"713:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"indexed":false,"mutability":"mutable","name":"contractAddress","nameLocation":"738:15:6","nodeType":"VariableDeclaration","scope":691,"src":"730:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"indexed":false,"mutability":"mutable","name":"functionSig","nameLocation":"762:11:6","nodeType":"VariableDeclaration","scope":691,"src":"755:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":688,"name":"string","nodeType":"ElementaryTypeName","src":"755:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"712:62:6"},"src":"689:86:6"},{"anonymous":false,"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"783:90:6","text":"@notice Emitted when an account is revoked a permission to a certain contract function"},"eventSelector":"55426a61e90ac7d7d1fc886b67b420ade8c8b535e68d655394bc271e3a12b8e2","id":700,"name":"PermissionRevoked","nameLocation":"885:17:6","nodeType":"EventDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"911:7:6","nodeType":"VariableDeclaration","scope":700,"src":"903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":696,"indexed":false,"mutability":"mutable","name":"contractAddress","nameLocation":"928:15:6","nodeType":"VariableDeclaration","scope":700,"src":"920:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"indexed":false,"mutability":"mutable","name":"functionSig","nameLocation":"952:11:6","nodeType":"VariableDeclaration","scope":700,"src":"945:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":697,"name":"string","nodeType":"ElementaryTypeName","src":"945:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"902:62:6"},"src":"879:86:6"},{"body":{"id":709,"nodeType":"Block","src":"987:183:6","statements":[{"expression":{"arguments":[{"id":704,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1131:18:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1151:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1155:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1151:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":703,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1120:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1120:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"1120:42:6"}]},"id":710,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"984:2:6"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"987:0:6"},"scope":852,"src":"973:197:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":758,"nodeType":"Block","src":"1756:300:6","statements":[{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"role","nameLocation":"1775:4:6","nodeType":"VariableDeclaration","scope":758,"src":"1767:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1767:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":730,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1809:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1813:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1809:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1821:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":723,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1792:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1796:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"1792:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":722,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1782:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1767:67:6"},{"condition":{"arguments":[{"id":732,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1859:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":733,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1865:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":731,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1851:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1851:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":756,"nodeType":"Block","src":"1919:130:6","statements":[{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1934:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1976:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1968:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:6","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1968:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1980:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":740,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1951:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1955:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"1951:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1951:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":739,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1941:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1934:59:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":750,"nodeType":"ExpressionStatement","src":"1934:59:6"},{"expression":{"arguments":[{"id":752,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2023:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2029:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":751,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2015:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":719,"id":755,"nodeType":"Return","src":"2008:29:6"}]},"id":757,"nodeType":"IfStatement","src":"1847:202:6","trueBody":{"id":737,"nodeType":"Block","src":"1875:38:6","statements":[{"expression":{"hexValue":"74727565","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1897:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":719,"id":736,"nodeType":"Return","src":"1890:11:6"}]}}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"1178:476:6","text":" @notice Verifies if the given account can call a contract's guarded function\n @dev Since restricted contracts using this function as a permission hook, we can get contracts address with msg.sender\n @param account for which call permissions will be checked\n @param functionSig restricted function signature e.g. \"functionName(uint256,bool)\"\n @return false if the user account cannot call the particular contract function"},"functionSelector":"18c5e8ab","id":759,"implemented":true,"kind":"function","modifiers":[],"name":"isAllowedToCall","nameLocation":"1669:15:6","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"account","nameLocation":"1693:7:6","nodeType":"VariableDeclaration","scope":759,"src":"1685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1685:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"functionSig","nameLocation":"1716:11:6","nodeType":"VariableDeclaration","scope":759,"src":"1702:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":714,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1684:44:6"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"1750:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":717,"name":"bool","nodeType":"ElementaryTypeName","src":"1750:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1749:6:6"},"scope":852,"src":"1660:396:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":786,"nodeType":"Block","src":"2776:131:6","statements":[{"assignments":[772],"declarations":[{"constant":false,"id":772,"mutability":"mutable","name":"role","nameLocation":"2795:4:6","nodeType":"VariableDeclaration","scope":786,"src":"2787:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2787:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":780,"initialValue":{"arguments":[{"arguments":[{"id":776,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2829:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2846:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2812:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2816:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"2812:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":773,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2802:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2787:72:6"},{"expression":{"arguments":[{"id":782,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"2885:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":783,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2891:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":781,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2877:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":770,"id":785,"nodeType":"Return","src":"2870:29:6"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"2064:553:6","text":" @notice Verifies if the given account can call a contract's guarded function\n @dev This function is used as a view function to check permissions rather than contract hook for access restriction check.\n @param account for which call permissions will be checked against\n @param contractAddress address of the restricted contract\n @param functionSig signature of the restricted function e.g. \"functionName(uint256,bool)\"\n @return false if the user account cannot call the particular contract function"},"functionSelector":"82bfd0f0","id":787,"implemented":true,"kind":"function","modifiers":[],"name":"hasPermission","nameLocation":"2632:13:6","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"account","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":787,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"contractAddress","nameLocation":"2690:15:6","nodeType":"VariableDeclaration","scope":787,"src":"2682:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"functionSig","nameLocation":"2730:11:6","nodeType":"VariableDeclaration","scope":787,"src":"2716:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":765,"name":"string","nodeType":"ElementaryTypeName","src":"2716:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2645:103:6"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"2770:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":768,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:6"},"scope":852,"src":"2623:284:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":818,"nodeType":"Block","src":"3714:214:6","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"role","nameLocation":"3733:4:6","nodeType":"VariableDeclaration","scope":818,"src":"3725:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[{"arguments":[{"id":802,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3767:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3784:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":800,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3750:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3754:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"3750:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3750:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":799,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3740:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3725:72:6"},{"expression":{"arguments":[{"id":808,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3818:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":809,"name":"accountToPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3824:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":807,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3808:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3808:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"3808:32:6"},{"eventCall":{"arguments":[{"id":813,"name":"accountToPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3874:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3891:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3908:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":812,"name":"PermissionGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3856:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,string memory)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"EmitStatement","src":"3851:69:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"2915:647:6","text":" @notice Gives a function call permission to one single account\n @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\n @param contractAddress address of contract for which call permissions will be granted\n @dev if contractAddress is zero address, the account can access the specified function\n      on **any** contract managed by this ACL\n @param functionSig signature e.g. \"functionName(uint256,bool)\"\n @param accountToPermit account that will be given access to the contract function\n @custom:events Emits a {RoleGranted} and {PermissionGranted} events."},"functionSelector":"584f6b60","id":819,"implemented":true,"kind":"function","modifiers":[],"name":"giveCallPermission","nameLocation":"3577:18:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"contractAddress","nameLocation":"3614:15:6","nodeType":"VariableDeclaration","scope":819,"src":"3606:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"3606:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"functionSig","nameLocation":"3654:11:6","nodeType":"VariableDeclaration","scope":819,"src":"3640:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":791,"name":"string","nodeType":"ElementaryTypeName","src":"3640:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"accountToPermit","nameLocation":"3684:15:6","nodeType":"VariableDeclaration","scope":819,"src":"3676:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"3676:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3595:111:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"3714:0:6"},"scope":852,"src":"3568:360:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":850,"nodeType":"Block","src":"4546:215:6","statements":[{"assignments":[830],"declarations":[{"constant":false,"id":830,"mutability":"mutable","name":"role","nameLocation":"4565:4:6","nodeType":"VariableDeclaration","scope":850,"src":"4557:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4557:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"arguments":[{"id":834,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4599:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4616:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":832,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4582:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4586:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"4582:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":831,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4572:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4557:72:6"},{"expression":{"arguments":[{"id":840,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4651:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":841,"name":"accountToRevoke","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4657:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":839,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4640:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"4640:33:6"},{"eventCall":{"arguments":[{"id":845,"name":"accountToRevoke","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4707:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4724:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4741:11:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":844,"name":"PermissionRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4689:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,string memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4689:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"EmitStatement","src":"4684:69:6"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"3936:456:6","text":" @notice Revokes an account's permission to a particular function call\n @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\n \t\tMay emit a {RoleRevoked} event.\n @param contractAddress address of contract for which call permissions will be revoked\n @param functionSig signature e.g. \"functionName(uint256,bool)\"\n @custom:events Emits {RoleRevoked} and {PermissionRevoked} events."},"functionSelector":"545f7a32","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"revokeCallPermission","nameLocation":"4407:20:6","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"contractAddress","nameLocation":"4446:15:6","nodeType":"VariableDeclaration","scope":851,"src":"4438:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"functionSig","nameLocation":"4486:11:6","nodeType":"VariableDeclaration","scope":851,"src":"4472:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":823,"name":"string","nodeType":"ElementaryTypeName","src":"4472:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"accountToRevoke","nameLocation":"4516:15:6","nodeType":"VariableDeclaration","scope":851,"src":"4508:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"4508:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4427:111:6"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"4546:0:6"},"scope":852,"src":"4398:363:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":853,"src":"367:4397:6","usedErrors":[]}],"src":"42:4722:6"},"id":6}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db0193718d840881c45b764af4a0fa3b7f0a9095f17db32847c57d63fa11a7ec64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB ADD SWAP4 PUSH18 0x8D840881C45B764AF4A0FA3B7F0A9095F17D 0xB3 0x28 SELFBALANCE 0xC5 PUSH30 0x63FA11A7EC64736F6C634300081100330000000000000000000000000000 ","sourceMap":"161:2235:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db0193718d840881c45b764af4a0fa3b7f0a9095f17db32847c57d63fa11a7ec64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB ADD SWAP4 PUSH18 0x8D840881C45B764AF4A0FA3B7F0A9095F17D 0xB3 0x28 SELFBALANCE 0xC5 PUSH30 0x63FA11A7EC64736F6C634300081100330000000000000000000000000000 ","sourceMap":"161:2235:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Governance/AccessControlManager.sol":{"AccessControlManager":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"string","name":"functionSig","type":"string"}],"name":"PermissionGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"string","name":"functionSig","type":"string"}],"name":"PermissionRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"string","name":"functionSig","type":"string"},{"internalType":"address","name":"accountToPermit","type":"address"}],"name":"giveCallPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"string","name":"functionSig","type":"string"}],"name":"hasPermission","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"functionSig","type":"string"}],"name":"isAllowedToCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"string","name":"functionSig","type":"string"},{"internalType":"address","name":"accountToRevoke","type":"address"}],"name":"revokeCallPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"0xLucian","details":"This contract is a wrapper of OpenZeppelin AccessControl\t\textending it in a way to standartize access control\t\twithin Venus Smart Contract Ecosystem","events":{"PermissionGranted(address,address,string)":{"details":"If contract address is 0x000..0 this means that the account is a default admin of this function and can call any contract function with this signature"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"giveCallPermission(address,string,address)":{"custom:events":"Emits a {RoleGranted} and {PermissionGranted} events.","details":"this function can be called only from Role Admin or DEFAULT_ADMIN_ROLEif contractAddress is zero address, the account can access the specified function      on **any** contract managed by this ACL","params":{"accountToPermit":"account that will be given access to the contract function","contractAddress":"address of contract for which call permissions will be granted","functionSig":"signature e.g. \"functionName(uint256,bool)\""}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasPermission(address,address,string)":{"details":"This function is used as a view function to check permissions rather than contract hook for access restriction check.","params":{"account":"for which call permissions will be checked against","contractAddress":"address of the restricted contract","functionSig":"signature of the restricted function e.g. \"functionName(uint256,bool)\""},"returns":{"_0":"false if the user account cannot call the particular contract function"}},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"isAllowedToCall(address,string)":{"details":"Since restricted contracts using this function as a permission hook, we can get contracts address with msg.sender","params":{"account":"for which call permissions will be checked","functionSig":"restricted function signature e.g. \"functionName(uint256,bool)\""},"returns":{"_0":"false if the user account cannot call the particular contract function"}},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeCallPermission(address,string,address)":{"custom:events":"Emits {RoleRevoked} and {PermissionRevoked} events.","details":"this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE \t\tMay emit a {RoleRevoked} event.","params":{"contractAddress":"address of contract for which call permissions will be revoked","functionSig":"signature e.g. \"functionName(uint256,bool)\""}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"title":"Venus Access Control Contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_710":{"entryPoint":null,"id":710,"parameterSlots":0,"returnSlots":0},"@_grantRole_287":{"entryPoint":47,"id":287,"parameterSlots":2,"returnSlots":0},"@_msgSender_404":{"entryPoint":null,"id":404,"parameterSlots":0,"returnSlots":1},"@_setupRole_227":{"entryPoint":33,"id":227,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH1 0x0 CALLER PUSH2 0x21 JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH2 0x2B DUP3 DUP3 PUSH2 0x2F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x89 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xF36 DUP1 PUSH2 0xDC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x545F7A32 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x545F7A32 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x584F6B60 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x82BFD0F0 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x18C5E8AB EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x14D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x28D JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A9 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x300 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x37F DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x389 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x442 DUP3 DUP3 PUSH2 0x6B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x47D DUP2 DUP4 PUSH2 0x590 JUMP JUMPDEST PUSH32 0x55426A61E90AC7D7D1FC886B67B420ADE8C8B535E68D655394BC271E3A12B8E2 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D3 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x4F5 DUP2 DUP4 PUSH2 0x364 JUMP JUMPDEST PUSH32 0x69C5CE2D658FEA352A2464F87FFBE1F09746C918A91DA0994044C3767D641B3F DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53E SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5AB DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x389 DUP4 DUP4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x5BF DUP2 CALLER PUSH2 0x769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x442 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x654 CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x442 JUMPI PUSH2 0x7BF DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x7CA DUP4 PUSH1 0x20 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7DB SWAP3 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x42F SWAP2 PUSH1 0x4 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x82A DUP4 PUSH1 0x2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x835 SWAP1 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x877 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8AE JUMPI PUSH2 0x8AE PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x94D DUP5 PUSH1 0x2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x958 SWAP1 PUSH1 0x1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9F5 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0xE9C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9AF JUMPI PUSH2 0x9AF PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x9EE DUP2 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH2 0x95B JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2B PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0xAD0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA8 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD0 DUP6 DUP3 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC16 PUSH1 0x20 DUP5 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC65 DUP7 DUP3 DUP8 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP3 POP POP PUSH2 0xC74 PUSH1 0x40 DUP6 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9B DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xCA9 PUSH1 0x20 DUP6 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD1 DUP7 DUP3 DUP8 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCDE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x60 SHL AND DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xD3C DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x14 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD62 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP4 MSTORE DUP1 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x587 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xDE7 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xE24 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xCDB JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xE43 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xE43 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xEDA JUMPI PUSH2 0xEDA PUSH2 0xE43 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC4828D6EB6 DUP4 0x29 0x27 BASEFEE INVALID SUB 0xCE 0xC2 SWAP1 CREATE2 0x25 MOD SWAP13 0xCA 0xD3 RETURNDATACOPY KECCAK256 0x1F 0xAA 0xDB PUSH15 0xE4ACA9347F64736F6C634300081100 CALLER ","sourceMap":"367:4397:6:-:0;;;973:197;;;;;;;;;-1:-1:-1;1120:42:6;2072:4:0;1151:10:6;1120;:42::i;:::-;367:4397;;6824:110:0;6902:25;6913:4;6919:7;6902:10;:25::i;:::-;6824:110;;:::o;7474:233::-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:2;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;367:4397:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@_checkRole_135":{"entryPoint":1897,"id":135,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":1461,"id":92,"parameterSlots":1,"returnSlots":0},"@_grantRole_287":{"entryPoint":1474,"id":287,"parameterSlots":2,"returnSlots":0},"@_msgSender_404":{"entryPoint":null,"id":404,"parameterSlots":0,"returnSlots":1},"@_revokeRole_318":{"entryPoint":1714,"id":318,"parameterSlots":2,"returnSlots":0},"@getRoleAdmin_150":{"entryPoint":null,"id":150,"parameterSlots":1,"returnSlots":1},"@giveCallPermission_819":{"entryPoint":1214,"id":819,"parameterSlots":3,"returnSlots":0},"@grantRole_170":{"entryPoint":868,"id":170,"parameterSlots":2,"returnSlots":0},"@hasPermission_787":{"entryPoint":1320,"id":787,"parameterSlots":3,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@isAllowedToCall_759":{"entryPoint":659,"id":759,"parameterSlots":2,"returnSlots":1},"@renounceRole_213":{"entryPoint":910,"id":213,"parameterSlots":2,"returnSlots":0},"@revokeCallPermission_851":{"entryPoint":1094,"id":851,"parameterSlots":3,"returnSlots":0},"@revokeRole_190":{"entryPoint":1424,"id":190,"parameterSlots":2,"returnSlots":0},"@supportsInterface_60":{"entryPoint":506,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_663":{"entryPoint":null,"id":663,"parameterSlots":1,"returnSlots":1},"@toHexString_619":{"entryPoint":2075,"id":619,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":2815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_string_memory_ptr":{"entryPoint":3197,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":2956,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptrt_address":{"entryPoint":3103,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32":{"entryPoint":3034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3059,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3327,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3503,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3446,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3721,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3698,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3291,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":3787,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3651,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3740,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2768,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7877:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:7"},"nodeType":"YulFunctionCall","src":"131:12:7"},"nodeType":"YulExpressionStatement","src":"131:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:7"},"nodeType":"YulFunctionCall","src":"100:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:7"},"nodeType":"YulFunctionCall","src":"96:32:7"},"nodeType":"YulIf","src":"93:52:7"},{"nodeType":"YulVariableDeclaration","src":"154:36:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:7"},"nodeType":"YulFunctionCall","src":"167:23:7"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"300:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:7"},"nodeType":"YulFunctionCall","src":"302:12:7"},"nodeType":"YulExpressionStatement","src":"302:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"230:66:7","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:7"},"nodeType":"YulFunctionCall","src":"219:78:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:7"},"nodeType":"YulFunctionCall","src":"209:89:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:7"},"nodeType":"YulFunctionCall","src":"202:97:7"},"nodeType":"YulIf","src":"199:117:7"},{"nodeType":"YulAssignment","src":"325:15:7","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:7"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:7","type":""}],"src":"14:332:7"},{"body":{"nodeType":"YulBlock","src":"446:92:7","statements":[{"nodeType":"YulAssignment","src":"456:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:7"},"nodeType":"YulFunctionCall","src":"464:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"456:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:7"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"523:6:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"516:6:7"},"nodeType":"YulFunctionCall","src":"516:14:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:7"},"nodeType":"YulFunctionCall","src":"509:22:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"491:6:7"},"nodeType":"YulFunctionCall","src":"491:41:7"},"nodeType":"YulExpressionStatement","src":"491:41:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"415:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"426:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"437:4:7","type":""}],"src":"351:187:7"},{"body":{"nodeType":"YulBlock","src":"592:147:7","statements":[{"nodeType":"YulAssignment","src":"602:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"624:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"611:12:7"},"nodeType":"YulFunctionCall","src":"611:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"602:5:7"}]},{"body":{"nodeType":"YulBlock","src":"717:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"729:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"719:6:7"},"nodeType":"YulFunctionCall","src":"719:12:7"},"nodeType":"YulExpressionStatement","src":"719:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"653:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"664:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"671:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"660:3:7"},"nodeType":"YulFunctionCall","src":"660:54:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"650:2:7"},"nodeType":"YulFunctionCall","src":"650:65:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"643:6:7"},"nodeType":"YulFunctionCall","src":"643:73:7"},"nodeType":"YulIf","src":"640:93:7"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"571:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"582:5:7","type":""}],"src":"543:196:7"},{"body":{"nodeType":"YulBlock","src":"776:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"793:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"796:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"786:6:7"},"nodeType":"YulFunctionCall","src":"786:88:7"},"nodeType":"YulExpressionStatement","src":"786:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"890:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"893:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"883:6:7"},"nodeType":"YulFunctionCall","src":"883:15:7"},"nodeType":"YulExpressionStatement","src":"883:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"914:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"917:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"907:6:7"},"nodeType":"YulFunctionCall","src":"907:15:7"},"nodeType":"YulExpressionStatement","src":"907:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"744:184:7"},{"body":{"nodeType":"YulBlock","src":"986:725:7","statements":[{"body":{"nodeType":"YulBlock","src":"1035:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1044:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1047:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1037:6:7"},"nodeType":"YulFunctionCall","src":"1037:12:7"},"nodeType":"YulExpressionStatement","src":"1037:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1014:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1022:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:7"},"nodeType":"YulFunctionCall","src":"1010:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"1029:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1006:3:7"},"nodeType":"YulFunctionCall","src":"1006:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"999:6:7"},"nodeType":"YulFunctionCall","src":"999:35:7"},"nodeType":"YulIf","src":"996:55:7"},{"nodeType":"YulVariableDeclaration","src":"1060:30:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1083:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1070:12:7"},"nodeType":"YulFunctionCall","src":"1070:20:7"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1064:2:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1099:28:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1109:18:7","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1103:2:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1150:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1152:16:7"},"nodeType":"YulFunctionCall","src":"1152:18:7"},"nodeType":"YulExpressionStatement","src":"1152:18:7"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1142:2:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1146:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1139:2:7"},"nodeType":"YulFunctionCall","src":"1139:10:7"},"nodeType":"YulIf","src":"1136:36:7"},{"nodeType":"YulVariableDeclaration","src":"1181:76:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1191:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1185:2:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1266:23:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1286:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1280:5:7"},"nodeType":"YulFunctionCall","src":"1280:9:7"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1270:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1298:71:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1320:6:7"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1344:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"1348:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1340:3:7"},"nodeType":"YulFunctionCall","src":"1340:13:7"},{"name":"_3","nodeType":"YulIdentifier","src":"1355:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1336:3:7"},"nodeType":"YulFunctionCall","src":"1336:22:7"},{"kind":"number","nodeType":"YulLiteral","src":"1360:2:7","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1332:3:7"},"nodeType":"YulFunctionCall","src":"1332:31:7"},{"name":"_3","nodeType":"YulIdentifier","src":"1365:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1328:3:7"},"nodeType":"YulFunctionCall","src":"1328:40:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1316:3:7"},"nodeType":"YulFunctionCall","src":"1316:53:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1302:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"1428:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1430:16:7"},"nodeType":"YulFunctionCall","src":"1430:18:7"},"nodeType":"YulExpressionStatement","src":"1430:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1387:10:7"},{"name":"_2","nodeType":"YulIdentifier","src":"1399:2:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1384:2:7"},"nodeType":"YulFunctionCall","src":"1384:18:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1407:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1419:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1404:2:7"},"nodeType":"YulFunctionCall","src":"1404:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1381:2:7"},"nodeType":"YulFunctionCall","src":"1381:46:7"},"nodeType":"YulIf","src":"1378:72:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1466:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1470:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1459:6:7"},"nodeType":"YulFunctionCall","src":"1459:22:7"},"nodeType":"YulExpressionStatement","src":"1459:22:7"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1497:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1505:2:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:7"},"nodeType":"YulFunctionCall","src":"1490:18:7"},"nodeType":"YulExpressionStatement","src":"1490:18:7"},{"body":{"nodeType":"YulBlock","src":"1556:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1565:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1568:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1558:6:7"},"nodeType":"YulFunctionCall","src":"1558:12:7"},"nodeType":"YulExpressionStatement","src":"1558:12:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1531:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1539:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1527:3:7"},"nodeType":"YulFunctionCall","src":"1527:15:7"},{"kind":"number","nodeType":"YulLiteral","src":"1544:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:7"},"nodeType":"YulFunctionCall","src":"1523:26:7"},{"name":"end","nodeType":"YulIdentifier","src":"1551:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:7"},"nodeType":"YulFunctionCall","src":"1520:35:7"},"nodeType":"YulIf","src":"1517:55:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1606:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1594:3:7"},"nodeType":"YulFunctionCall","src":"1594:17:7"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1617:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1625:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:7"},"nodeType":"YulFunctionCall","src":"1613:17:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1632:2:7"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1581:12:7"},"nodeType":"YulFunctionCall","src":"1581:54:7"},"nodeType":"YulExpressionStatement","src":"1581:54:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1659:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"1667:2:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1655:3:7"},"nodeType":"YulFunctionCall","src":"1655:15:7"},{"kind":"number","nodeType":"YulLiteral","src":"1672:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1651:3:7"},"nodeType":"YulFunctionCall","src":"1651:26:7"},{"kind":"number","nodeType":"YulLiteral","src":"1679:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1644:6:7"},"nodeType":"YulFunctionCall","src":"1644:37:7"},"nodeType":"YulExpressionStatement","src":"1644:37:7"},{"nodeType":"YulAssignment","src":"1690:15:7","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1699:6:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1690:5:7"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"960:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"968:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"976:5:7","type":""}],"src":"933:778:7"},{"body":{"nodeType":"YulBlock","src":"1813:299:7","statements":[{"body":{"nodeType":"YulBlock","src":"1859:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1871:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1861:6:7"},"nodeType":"YulFunctionCall","src":"1861:12:7"},"nodeType":"YulExpressionStatement","src":"1861:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1834:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1830:3:7"},"nodeType":"YulFunctionCall","src":"1830:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1855:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1826:3:7"},"nodeType":"YulFunctionCall","src":"1826:32:7"},"nodeType":"YulIf","src":"1823:52:7"},{"nodeType":"YulAssignment","src":"1884:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1913:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1894:18:7"},"nodeType":"YulFunctionCall","src":"1894:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1884:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"1932:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1963:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1974:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1959:3:7"},"nodeType":"YulFunctionCall","src":"1959:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1946:12:7"},"nodeType":"YulFunctionCall","src":"1946:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1936:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2021:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2030:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2033:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2023:6:7"},"nodeType":"YulFunctionCall","src":"2023:12:7"},"nodeType":"YulExpressionStatement","src":"2023:12:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1993:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2001:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1990:2:7"},"nodeType":"YulFunctionCall","src":"1990:30:7"},"nodeType":"YulIf","src":"1987:50:7"},{"nodeType":"YulAssignment","src":"2046:60:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2078:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"2089:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2074:3:7"},"nodeType":"YulFunctionCall","src":"2074:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2098:7:7"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2056:17:7"},"nodeType":"YulFunctionCall","src":"2056:50:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2046:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1771:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1782:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1794:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1802:6:7","type":""}],"src":"1716:396:7"},{"body":{"nodeType":"YulBlock","src":"2187:110:7","statements":[{"body":{"nodeType":"YulBlock","src":"2233:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2242:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2245:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2235:6:7"},"nodeType":"YulFunctionCall","src":"2235:12:7"},"nodeType":"YulExpressionStatement","src":"2235:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2208:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2217:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2204:3:7"},"nodeType":"YulFunctionCall","src":"2204:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2229:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2200:3:7"},"nodeType":"YulFunctionCall","src":"2200:32:7"},"nodeType":"YulIf","src":"2197:52:7"},{"nodeType":"YulAssignment","src":"2258:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2281:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2268:12:7"},"nodeType":"YulFunctionCall","src":"2268:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2258:6:7"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2153:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2164:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2176:6:7","type":""}],"src":"2117:180:7"},{"body":{"nodeType":"YulBlock","src":"2403:76:7","statements":[{"nodeType":"YulAssignment","src":"2413:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2436:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:7"},"nodeType":"YulFunctionCall","src":"2421:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2413:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2455:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"2466:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2448:6:7"},"nodeType":"YulFunctionCall","src":"2448:25:7"},"nodeType":"YulExpressionStatement","src":"2448:25:7"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2372:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2383:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2394:4:7","type":""}],"src":"2302:177:7"},{"body":{"nodeType":"YulBlock","src":"2571:167:7","statements":[{"body":{"nodeType":"YulBlock","src":"2617:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2626:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2629:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2619:6:7"},"nodeType":"YulFunctionCall","src":"2619:12:7"},"nodeType":"YulExpressionStatement","src":"2619:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2592:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2588:3:7"},"nodeType":"YulFunctionCall","src":"2588:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2584:3:7"},"nodeType":"YulFunctionCall","src":"2584:32:7"},"nodeType":"YulIf","src":"2581:52:7"},{"nodeType":"YulAssignment","src":"2642:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2665:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2652:12:7"},"nodeType":"YulFunctionCall","src":"2652:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2642:6:7"}]},{"nodeType":"YulAssignment","src":"2684:48:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2717:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2728:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:7"},"nodeType":"YulFunctionCall","src":"2713:18:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2694:18:7"},"nodeType":"YulFunctionCall","src":"2694:38:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2684:6:7"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2529:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2540:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2552:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2560:6:7","type":""}],"src":"2484:254:7"},{"body":{"nodeType":"YulBlock","src":"2857:356:7","statements":[{"body":{"nodeType":"YulBlock","src":"2903:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2912:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2915:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2905:6:7"},"nodeType":"YulFunctionCall","src":"2905:12:7"},"nodeType":"YulExpressionStatement","src":"2905:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2878:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2887:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2874:3:7"},"nodeType":"YulFunctionCall","src":"2874:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2899:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2870:3:7"},"nodeType":"YulFunctionCall","src":"2870:32:7"},"nodeType":"YulIf","src":"2867:52:7"},{"nodeType":"YulAssignment","src":"2928:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2938:18:7"},"nodeType":"YulFunctionCall","src":"2938:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2928:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"2976:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3018:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:7"},"nodeType":"YulFunctionCall","src":"3003:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2990:12:7"},"nodeType":"YulFunctionCall","src":"2990:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2980:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3065:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3074:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3077:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3067:6:7"},"nodeType":"YulFunctionCall","src":"3067:12:7"},"nodeType":"YulExpressionStatement","src":"3067:12:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3037:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3045:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3034:2:7"},"nodeType":"YulFunctionCall","src":"3034:30:7"},"nodeType":"YulIf","src":"3031:50:7"},{"nodeType":"YulAssignment","src":"3090:60:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3122:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3133:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3118:3:7"},"nodeType":"YulFunctionCall","src":"3118:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3142:7:7"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3100:17:7"},"nodeType":"YulFunctionCall","src":"3100:50:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3090:6:7"}]},{"nodeType":"YulAssignment","src":"3159:48:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3203:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:7"},"nodeType":"YulFunctionCall","src":"3188:18:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3169:18:7"},"nodeType":"YulFunctionCall","src":"3169:38:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3159:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2807:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2818:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2830:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2838:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2846:6:7","type":""}],"src":"2743:470:7"},{"body":{"nodeType":"YulBlock","src":"3332:356:7","statements":[{"body":{"nodeType":"YulBlock","src":"3378:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3387:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3390:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3380:6:7"},"nodeType":"YulFunctionCall","src":"3380:12:7"},"nodeType":"YulExpressionStatement","src":"3380:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3353:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"3362:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3349:3:7"},"nodeType":"YulFunctionCall","src":"3349:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3345:3:7"},"nodeType":"YulFunctionCall","src":"3345:32:7"},"nodeType":"YulIf","src":"3342:52:7"},{"nodeType":"YulAssignment","src":"3403:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3413:18:7"},"nodeType":"YulFunctionCall","src":"3413:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3403:6:7"}]},{"nodeType":"YulAssignment","src":"3451:48:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3484:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:7"},"nodeType":"YulFunctionCall","src":"3480:18:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3461:18:7"},"nodeType":"YulFunctionCall","src":"3461:38:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3451:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"3508:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3539:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3550:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3535:3:7"},"nodeType":"YulFunctionCall","src":"3535:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3522:12:7"},"nodeType":"YulFunctionCall","src":"3522:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3512:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3597:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3606:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3609:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3599:6:7"},"nodeType":"YulFunctionCall","src":"3599:12:7"},"nodeType":"YulExpressionStatement","src":"3599:12:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3569:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3577:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3566:2:7"},"nodeType":"YulFunctionCall","src":"3566:30:7"},"nodeType":"YulIf","src":"3563:50:7"},{"nodeType":"YulAssignment","src":"3622:60:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3654:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3665:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:7"},"nodeType":"YulFunctionCall","src":"3650:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3674:7:7"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3632:17:7"},"nodeType":"YulFunctionCall","src":"3632:50:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3622:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3282:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3293:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3305:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3313:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3321:6:7","type":""}],"src":"3218:470:7"},{"body":{"nodeType":"YulBlock","src":"3759:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3769:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3778:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3773:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3838:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3863:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"3868:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:7"},"nodeType":"YulFunctionCall","src":"3859:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3882:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"3887:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3878:3:7"},"nodeType":"YulFunctionCall","src":"3878:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3872:5:7"},"nodeType":"YulFunctionCall","src":"3872:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3852:6:7"},"nodeType":"YulFunctionCall","src":"3852:39:7"},"nodeType":"YulExpressionStatement","src":"3852:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3799:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"3802:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3796:2:7"},"nodeType":"YulFunctionCall","src":"3796:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3810:19:7","statements":[{"nodeType":"YulAssignment","src":"3812:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3821:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"3824:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3817:3:7"},"nodeType":"YulFunctionCall","src":"3817:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3812:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"3792:3:7","statements":[]},"src":"3788:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3921:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"3926:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3917:3:7"},"nodeType":"YulFunctionCall","src":"3917:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"3935:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3910:6:7"},"nodeType":"YulFunctionCall","src":"3910:27:7"},"nodeType":"YulExpressionStatement","src":"3910:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3737:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3742:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"3747:6:7","type":""}],"src":"3693:250:7"},{"body":{"nodeType":"YulBlock","src":"4115:278:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4132:3:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4145:2:7","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"4149:6:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4141:3:7"},"nodeType":"YulFunctionCall","src":"4141:15:7"},{"kind":"number","nodeType":"YulLiteral","src":"4158:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4137:3:7"},"nodeType":"YulFunctionCall","src":"4137:88:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4125:6:7"},"nodeType":"YulFunctionCall","src":"4125:101:7"},"nodeType":"YulExpressionStatement","src":"4125:101:7"},{"nodeType":"YulVariableDeclaration","src":"4235:27:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4255:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4249:5:7"},"nodeType":"YulFunctionCall","src":"4249:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4239:6:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4310:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4318:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4306:3:7"},"nodeType":"YulFunctionCall","src":"4306:17:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4329:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4334:2:7","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4325:3:7"},"nodeType":"YulFunctionCall","src":"4325:12:7"},{"name":"length","nodeType":"YulIdentifier","src":"4339:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4271:34:7"},"nodeType":"YulFunctionCall","src":"4271:75:7"},"nodeType":"YulExpressionStatement","src":"4271:75:7"},{"nodeType":"YulAssignment","src":"4355:32:7","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4370:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4375:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4366:3:7"},"nodeType":"YulFunctionCall","src":"4366:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:7","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:7"},"nodeType":"YulFunctionCall","src":"4362:25:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4355:3:7"}]}]},"name":"abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4083:3:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4088:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4096:6:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4107:3:7","type":""}],"src":"3948:445:7"},{"body":{"nodeType":"YulBlock","src":"4572:237:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4589:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4600:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4582:6:7"},"nodeType":"YulFunctionCall","src":"4582:21:7"},"nodeType":"YulExpressionStatement","src":"4582:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4623:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4634:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4619:3:7"},"nodeType":"YulFunctionCall","src":"4619:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"4639:2:7","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4612:6:7"},"nodeType":"YulFunctionCall","src":"4612:30:7"},"nodeType":"YulExpressionStatement","src":"4612:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4662:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4658:3:7"},"nodeType":"YulFunctionCall","src":"4658:18:7"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"4678:34:7","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4651:6:7"},"nodeType":"YulFunctionCall","src":"4651:62:7"},"nodeType":"YulExpressionStatement","src":"4651:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4744:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4729:3:7"},"nodeType":"YulFunctionCall","src":"4729:18:7"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"4749:17:7","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4722:6:7"},"nodeType":"YulFunctionCall","src":"4722:45:7"},"nodeType":"YulExpressionStatement","src":"4722:45:7"},{"nodeType":"YulAssignment","src":"4776:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4788:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4799:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4784:3:7"},"nodeType":"YulFunctionCall","src":"4784:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4776:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4549:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4563:4:7","type":""}],"src":"4398:411:7"},{"body":{"nodeType":"YulBlock","src":"4864:280:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4874:26:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4894:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4888:5:7"},"nodeType":"YulFunctionCall","src":"4888:12:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4878:6:7","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4916:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4921:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4909:6:7"},"nodeType":"YulFunctionCall","src":"4909:19:7"},"nodeType":"YulExpressionStatement","src":"4909:19:7"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4976:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4983:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4972:3:7"},"nodeType":"YulFunctionCall","src":"4972:16:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4994:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4999:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:7"},"nodeType":"YulFunctionCall","src":"4990:14:7"},{"name":"length","nodeType":"YulIdentifier","src":"5006:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4937:34:7"},"nodeType":"YulFunctionCall","src":"4937:76:7"},"nodeType":"YulExpressionStatement","src":"4937:76:7"},{"nodeType":"YulAssignment","src":"5022:116:7","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5037:3:7"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5050:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"5058:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5046:3:7"},"nodeType":"YulFunctionCall","src":"5046:15:7"},{"kind":"number","nodeType":"YulLiteral","src":"5063:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5042:3:7"},"nodeType":"YulFunctionCall","src":"5042:88:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5033:3:7"},"nodeType":"YulFunctionCall","src":"5033:98:7"},{"kind":"number","nodeType":"YulLiteral","src":"5133:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5029:3:7"},"nodeType":"YulFunctionCall","src":"5029:109:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5022:3:7"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4841:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4848:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4856:3:7","type":""}],"src":"4814:330:7"},{"body":{"nodeType":"YulBlock","src":"5326:264:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5336:52:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5346:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5340:2:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5419:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"5427:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5415:3:7"},"nodeType":"YulFunctionCall","src":"5415:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5397:6:7"},"nodeType":"YulFunctionCall","src":"5397:34:7"},"nodeType":"YulExpressionStatement","src":"5397:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5451:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5462:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5447:3:7"},"nodeType":"YulFunctionCall","src":"5447:18:7"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5471:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"5479:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5467:3:7"},"nodeType":"YulFunctionCall","src":"5467:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5440:6:7"},"nodeType":"YulFunctionCall","src":"5440:43:7"},"nodeType":"YulExpressionStatement","src":"5440:43:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5503:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5514:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5499:3:7"},"nodeType":"YulFunctionCall","src":"5499:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"5519:2:7","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5492:6:7"},"nodeType":"YulFunctionCall","src":"5492:30:7"},"nodeType":"YulExpressionStatement","src":"5492:30:7"},{"nodeType":"YulAssignment","src":"5531:53:7","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5557:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5580:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:7"},"nodeType":"YulFunctionCall","src":"5565:18:7"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5539:17:7"},"nodeType":"YulFunctionCall","src":"5539:45:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5531:4:7"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5279:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5290:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5298:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5306:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5317:4:7","type":""}],"src":"5149:441:7"},{"body":{"nodeType":"YulBlock","src":"5984:423:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6001:3:7"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"6006:25:7","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5994:6:7"},"nodeType":"YulFunctionCall","src":"5994:38:7"},"nodeType":"YulExpressionStatement","src":"5994:38:7"},{"nodeType":"YulVariableDeclaration","src":"6041:27:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6061:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6055:5:7"},"nodeType":"YulFunctionCall","src":"6055:13:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6045:6:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6116:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6124:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6112:3:7"},"nodeType":"YulFunctionCall","src":"6112:17:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6135:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"6140:2:7","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6131:3:7"},"nodeType":"YulFunctionCall","src":"6131:12:7"},{"name":"length","nodeType":"YulIdentifier","src":"6145:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6077:34:7"},"nodeType":"YulFunctionCall","src":"6077:75:7"},"nodeType":"YulExpressionStatement","src":"6077:75:7"},{"nodeType":"YulVariableDeclaration","src":"6161:26:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6175:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"6180:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:7"},"nodeType":"YulFunctionCall","src":"6171:16:7"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6165:2:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6207:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"6211:2:7","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:7"},"nodeType":"YulFunctionCall","src":"6203:11:7"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"6216:19:7","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6196:6:7"},"nodeType":"YulFunctionCall","src":"6196:40:7"},"nodeType":"YulExpressionStatement","src":"6196:40:7"},{"nodeType":"YulVariableDeclaration","src":"6245:29:7","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6267:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6261:5:7"},"nodeType":"YulFunctionCall","src":"6261:13:7"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"6249:8:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6322:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6330:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6318:3:7"},"nodeType":"YulFunctionCall","src":"6318:17:7"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6341:2:7"},{"kind":"number","nodeType":"YulLiteral","src":"6345:2:7","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6337:3:7"},"nodeType":"YulFunctionCall","src":"6337:11:7"},{"name":"length_1","nodeType":"YulIdentifier","src":"6350:8:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6283:34:7"},"nodeType":"YulFunctionCall","src":"6283:76:7"},"nodeType":"YulExpressionStatement","src":"6283:76:7"},{"nodeType":"YulAssignment","src":"6368:33:7","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6383:2:7"},{"name":"length_1","nodeType":"YulIdentifier","src":"6387:8:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6379:3:7"},"nodeType":"YulFunctionCall","src":"6379:17:7"},{"kind":"number","nodeType":"YulLiteral","src":"6398:2:7","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6375:3:7"},"nodeType":"YulFunctionCall","src":"6375:26:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6368:3:7"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5952:3:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5957:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5965:6:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5976:3:7","type":""}],"src":"5595:812:7"},{"body":{"nodeType":"YulBlock","src":"6533:99:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6550:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6561:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:7"},"nodeType":"YulFunctionCall","src":"6543:21:7"},"nodeType":"YulExpressionStatement","src":"6543:21:7"},{"nodeType":"YulAssignment","src":"6573:53:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6599:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6611:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6622:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:7"},"nodeType":"YulFunctionCall","src":"6607:18:7"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6581:17:7"},"nodeType":"YulFunctionCall","src":"6581:45:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6573:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6502:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6513:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6524:4:7","type":""}],"src":"6412:220:7"},{"body":{"nodeType":"YulBlock","src":"6669:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6686:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6689:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6679:6:7"},"nodeType":"YulFunctionCall","src":"6679:88:7"},"nodeType":"YulExpressionStatement","src":"6679:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6783:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6786:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6776:6:7"},"nodeType":"YulFunctionCall","src":"6776:15:7"},"nodeType":"YulExpressionStatement","src":"6776:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6807:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6810:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6800:6:7"},"nodeType":"YulFunctionCall","src":"6800:15:7"},"nodeType":"YulExpressionStatement","src":"6800:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6637:184:7"},{"body":{"nodeType":"YulBlock","src":"6878:116:7","statements":[{"nodeType":"YulAssignment","src":"6888:20:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6903:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"6906:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6899:3:7"},"nodeType":"YulFunctionCall","src":"6899:9:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6888:7:7"}]},{"body":{"nodeType":"YulBlock","src":"6966:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6968:16:7"},"nodeType":"YulFunctionCall","src":"6968:18:7"},"nodeType":"YulExpressionStatement","src":"6968:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6937:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6930:6:7"},"nodeType":"YulFunctionCall","src":"6930:9:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6944:1:7"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6951:7:7"},{"name":"x","nodeType":"YulIdentifier","src":"6960:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6947:3:7"},"nodeType":"YulFunctionCall","src":"6947:15:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6941:2:7"},"nodeType":"YulFunctionCall","src":"6941:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6927:2:7"},"nodeType":"YulFunctionCall","src":"6927:37:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6920:6:7"},"nodeType":"YulFunctionCall","src":"6920:45:7"},"nodeType":"YulIf","src":"6917:71:7"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6857:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"6860:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6866:7:7","type":""}],"src":"6826:168:7"},{"body":{"nodeType":"YulBlock","src":"7047:77:7","statements":[{"nodeType":"YulAssignment","src":"7057:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7068:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"7071:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7064:3:7"},"nodeType":"YulFunctionCall","src":"7064:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7057:3:7"}]},{"body":{"nodeType":"YulBlock","src":"7096:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7098:16:7"},"nodeType":"YulFunctionCall","src":"7098:18:7"},"nodeType":"YulExpressionStatement","src":"7098:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7088:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"7091:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7085:2:7"},"nodeType":"YulFunctionCall","src":"7085:10:7"},"nodeType":"YulIf","src":"7082:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7030:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"7033:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7039:3:7","type":""}],"src":"6999:125:7"},{"body":{"nodeType":"YulBlock","src":"7161:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7178:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7181:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7171:6:7"},"nodeType":"YulFunctionCall","src":"7171:88:7"},"nodeType":"YulExpressionStatement","src":"7171:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7275:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7278:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7268:6:7"},"nodeType":"YulFunctionCall","src":"7268:15:7"},"nodeType":"YulExpressionStatement","src":"7268:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7299:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7302:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7292:6:7"},"nodeType":"YulFunctionCall","src":"7292:15:7"},"nodeType":"YulExpressionStatement","src":"7292:15:7"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7129:184:7"},{"body":{"nodeType":"YulBlock","src":"7365:149:7","statements":[{"body":{"nodeType":"YulBlock","src":"7392:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7394:16:7"},"nodeType":"YulFunctionCall","src":"7394:18:7"},"nodeType":"YulExpressionStatement","src":"7394:18:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7385:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7378:6:7"},"nodeType":"YulFunctionCall","src":"7378:13:7"},"nodeType":"YulIf","src":"7375:39:7"},{"nodeType":"YulAssignment","src":"7423:85:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7434:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"7441:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7430:3:7"},"nodeType":"YulFunctionCall","src":"7430:78:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7423:3:7"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7347:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7357:3:7","type":""}],"src":"7318:196:7"},{"body":{"nodeType":"YulBlock","src":"7693:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7710:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7721:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7703:6:7"},"nodeType":"YulFunctionCall","src":"7703:21:7"},"nodeType":"YulExpressionStatement","src":"7703:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7744:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7755:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7740:3:7"},"nodeType":"YulFunctionCall","src":"7740:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"7760:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7733:6:7"},"nodeType":"YulFunctionCall","src":"7733:30:7"},"nodeType":"YulExpressionStatement","src":"7733:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7783:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7779:3:7"},"nodeType":"YulFunctionCall","src":"7779:18:7"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"7799:34:7","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7772:6:7"},"nodeType":"YulFunctionCall","src":"7772:62:7"},"nodeType":"YulExpressionStatement","src":"7772:62:7"},{"nodeType":"YulAssignment","src":"7843:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7866:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7851:3:7"},"nodeType":"YulFunctionCall","src":"7851:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7843:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7670:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7684:4:7","type":""}],"src":"7519:356:7"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 20), length)\n        end := add(add(pos, length), 20)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c8063545f7a321161008157806391d148541161005b57806391d148541461019b578063a217fddf146101df578063d547741f146101e757600080fd5b8063545f7a3214610162578063584f6b601461017557806382bfd0f01461018857600080fd5b8063248a9ca3116100b2578063248a9ca3146101095780632f2ff15d1461013a57806336568abe1461014f57600080fd5b806301ffc9a7146100ce57806318c5e8ab146100f6575b600080fd5b6100e16100dc366004610a65565b6101fa565b60405190151581526020015b60405180910390f35b6100e1610104366004610b8c565b610293565b61012c610117366004610bda565b60009081526020819052604090206001015490565b6040519081526020016100ed565b61014d610148366004610bf3565b610364565b005b61014d61015d366004610bf3565b61038e565b61014d610170366004610c1f565b610446565b61014d610183366004610c1f565b6104be565b6100e1610196366004610c7d565b610528565b6100e16101a9366004610bf3565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b61012c600081565b61014d6101f5366004610bf3565b610590565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061028d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60008033836040516020016102a9929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8916825290935291205490915060ff161561030057600191505061028d565b600083604051602001610314929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8916825290935291205490915060ff16949350505050565b60008281526020819052604090206001015461037f816105b5565b61038983836105c2565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61044282826106b2565b5050565b6000838360405160200161045b929190610cff565b60405160208183030381529060405280519060200120905061047d8183610590565b7f55426a61e90ac7d7d1fc886b67b420ade8c8b535e68d655394bc271e3a12b8e28285856040516104b093929190610d76565b60405180910390a150505050565b600083836040516020016104d3929190610cff565b6040516020818303038152906040528051906020012090506104f58183610364565b7f69c5ce2d658fea352a2464f87ffbe1f09746c918a91da0994044c3767d641b3f8285856040516104b093929190610d76565b600080838360405160200161053e929190610cff565b60408051601f198184030181529181528151602092830120600081815280845282812073ffffffffffffffffffffffffffffffffffffffff8a16825290935291205490915060ff165b95945050505050565b6000828152602081905260409020600101546105ab816105b5565b61038983836106b2565b6105bf8133610769565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104425760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556106543390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156104425760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610442576107bf8173ffffffffffffffffffffffffffffffffffffffff16601461081b565b6107ca83602061081b565b6040516020016107db929190610daf565b60408051601f19818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261042f91600401610e30565b6060600061082a836002610e72565b610835906002610e89565b67ffffffffffffffff81111561084d5761084d610ad0565b6040519080825280601f01601f191660200182016040528015610877576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106108ae576108ae610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061091157610911610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061094d846002610e72565b610958906001610e89565b90505b60018111156109f5577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061099957610999610e9c565b1a60f81b8282815181106109af576109af610e9c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936109ee81610ecb565b905061095b565b508315610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161042f565b9392505050565b600060208284031215610a7757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610a5e57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610acb57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610b1057600080fd5b813567ffffffffffffffff80821115610b2b57610b2b610ad0565b604051601f8301601f19908116603f01168101908282118183101715610b5357610b53610ad0565b81604052838152866020858801011115610b6c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b9f57600080fd5b610ba883610aa7565b9150602083013567ffffffffffffffff811115610bc457600080fd5b610bd085828601610aff565b9150509250929050565b600060208284031215610bec57600080fd5b5035919050565b60008060408385031215610c0657600080fd5b82359150610c1660208401610aa7565b90509250929050565b600080600060608486031215610c3457600080fd5b610c3d84610aa7565b9250602084013567ffffffffffffffff811115610c5957600080fd5b610c6586828701610aff565b925050610c7460408501610aa7565b90509250925092565b600080600060608486031215610c9257600080fd5b610c9b84610aa7565b9250610ca960208501610aa7565b9150604084013567ffffffffffffffff811115610cc557600080fd5b610cd186828701610aff565b9150509250925092565b60005b83811015610cf6578181015183820152602001610cde565b50506000910152565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16815260008251610d3c816014850160208701610cdb565b919091016014019392505050565b60008151808452610d62816020860160208601610cdb565b601f01601f19169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526105876060830184610d4a565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610de7816017850160208801610cdb565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610e24816028840160208801610cdb565b01602801949350505050565b602081526000610a5e6020830184610d4a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761028d5761028d610e43565b8082018082111561028d5761028d610e43565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610eda57610eda610e43565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122064c4828d6eb683292748fe03cec290f525069ccad33e201faadb6ee4aca9347f64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x545F7A32 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x545F7A32 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x584F6B60 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x82BFD0F0 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x18C5E8AB EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x14D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x28D JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A9 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x300 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x37F DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x389 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x442 DUP3 DUP3 PUSH2 0x6B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x47D DUP2 DUP4 PUSH2 0x590 JUMP JUMPDEST PUSH32 0x55426A61E90AC7D7D1FC886B67B420ADE8C8B535E68D655394BC271E3A12B8E2 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D3 SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x4F5 DUP2 DUP4 PUSH2 0x364 JUMP JUMPDEST PUSH32 0x69C5CE2D658FEA352A2464F87FFBE1F09746C918A91DA0994044C3767D641B3F DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53E SWAP3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5AB DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x389 DUP4 DUP4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x5BF DUP2 CALLER PUSH2 0x769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x442 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x654 CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x442 JUMPI PUSH2 0x7BF DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x7CA DUP4 PUSH1 0x20 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7DB SWAP3 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x42F SWAP2 PUSH1 0x4 ADD PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x82A DUP4 PUSH1 0x2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x835 SWAP1 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x877 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8AE JUMPI PUSH2 0x8AE PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x94D DUP5 PUSH1 0x2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x958 SWAP1 PUSH1 0x1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9F5 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0xE9C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9AF JUMPI PUSH2 0x9AF PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x9EE DUP2 PUSH2 0xECB JUMP JUMPDEST SWAP1 POP PUSH2 0x95B JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2B PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB53 JUMPI PUSH2 0xB53 PUSH2 0xAD0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA8 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD0 DUP6 DUP3 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC16 PUSH1 0x20 DUP5 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC65 DUP7 DUP3 DUP8 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP3 POP POP PUSH2 0xC74 PUSH1 0x40 DUP6 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9B DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xCA9 PUSH1 0x20 DUP6 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD1 DUP7 DUP3 DUP8 ADD PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCDE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x60 SHL AND DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0xD3C DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x14 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD62 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP4 MSTORE DUP1 DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x587 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xDE7 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xE24 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xCDB JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xE43 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xE43 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xEDA JUMPI PUSH2 0xEDA PUSH2 0xE43 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC4828D6EB6 DUP4 0x29 0x27 BASEFEE INVALID SUB 0xCE 0xC2 SWAP1 CREATE2 0x25 MOD SWAP13 0xCA 0xD3 RETURNDATACOPY KECCAK256 0x1F 0xAA 0xDB PUSH15 0xE4ACA9347F64736F6C634300081100 CALLER ","sourceMap":"367:4397:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;:::i;:::-;;:::i;:::-;;;516:14:7;;509:22;491:41;;479:2;464:18;2606:202:0;;;;;;;;1660:396:6;;;;;;:::i;:::-;;:::i;4391:129:0:-;;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;2448:25:7;;;2436:2;2421:18;4391:129:0;2302:177:7;4816:145:0;;;;;;:::i;:::-;;:::i;:::-;;5925:214;;;;;;:::i;:::-;;:::i;4398:363:6:-;;;;;;:::i;:::-;;:::i;3568:360::-;;;;;;:::i;:::-;;:::i;2623:284::-;;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;:::i;:::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;;;;2895:145;2027:49;;2072:4;2027:49;;5241:147;;;;;;:::i;:::-;;:::i;2606:202::-;2691:4;2714:47;;;2729:32;2714:47;;:87;;-1:-1:-1;952:25:4;937:40;;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;1660:396:6:-;1750:4;1767:12;1809:10;1821:11;1792:41;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1792:41:6;;;;;;;;;1782:52;;1792:41;1782:52;;;;2981:4:0;3004:12;;;;;;;;;:29;;;;;;;;;;;1782:52:6;;-1:-1:-1;3004:29:0;;1847:202:6;;;1897:4;1890:11;;;;;1847:202;1976:1;1980:11;1951:41;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1951:41:6;;;;;;;;;1941:52;;1951:41;1941:52;;;;2981:4:0;3004:12;;;;;;;;;:29;;;;;;;;;;;1941:52:6;;-1:-1:-1;3004:29:0;;2008::6;1660:396;-1:-1:-1;;;;1660:396:6:o;4816:145:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6020:23;;;719:10:2;6020:23:0;6012:83;;;;;;;4600:2:7;6012:83:0;;;4582:21:7;4639:2;4619:18;;;4612:30;4678:34;4658:18;;;4651:62;4749:17;4729:18;;;4722:45;4784:19;;6012:83:0;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;4398:363:6:-;4557:12;4599:15;4616:11;4582:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4572:57;;;;;;4557:72;;4640:33;4651:4;4657:15;4640:10;:33::i;:::-;4689:64;4707:15;4724;4741:11;4689:64;;;;;;;;:::i;:::-;;;;;;;;4546:215;4398:363;;;:::o;3568:360::-;3725:12;3767:15;3784:11;3750:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3740:57;;;;;;3725:72;;3808:32;3818:4;3824:15;3808:9;:32::i;:::-;3856:64;3874:15;3891;3908:11;3856:64;;;;;;;;:::i;2623:284::-;2770:4;2787:12;2829:15;2846:11;2812:46;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2812:46:6;;;;;;;;;2802:57;;2812:46;2802:57;;;;2981:4:0;3004:12;;;;;;;;;:29;;;;;;;;;;;2802:57:6;;-1:-1:-1;3004:29:0;;2877:22:6;2870:29;2623:284;-1:-1:-1;;;;;2623:284:6:o;5241:147:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;3334:103::-:0;3400:30;3411:4;719:10:2;3400::0;:30::i;:::-;3334:103;:::o;7474:233::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;:29;;;;;;;;;;:36;;;;7627:4;7595:36;;;7677:12;719:10:2;;640:96;7677:12:0;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7957:149;;;8031:5;7999:12;;;;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8055:40;719:10:2;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;3718:492::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;3844:349;;;;;;;;:::i;1652:441:3:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:3;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1864:9:3;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1943:5;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;;;;;;;;;;-1:-1:-1;1979:1:3;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:3;;2000:55;;;;;;;7721:2:7;2000:55:3;;;7703:21:7;;;7740:18;;;7733:30;7799:34;7779:18;;;7772:62;7851:18;;2000:55:3;7519:356:7;2000:55:3;2079:6;1652:441;-1:-1:-1;;;1652:441:3:o;14:332:7:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:196;611:20;;671:42;660:54;;650:65;;640:93;;729:1;726;719:12;640:93;543:196;;;:::o;744:184::-;796:77;793:1;786:88;893:4;890:1;883:15;917:4;914:1;907:15;933:778;976:5;1029:3;1022:4;1014:6;1010:17;1006:27;996:55;;1047:1;1044;1037:12;996:55;1083:6;1070:20;1109:18;1146:2;1142;1139:10;1136:36;;;1152:18;;:::i;:::-;1286:2;1280:9;1348:4;1340:13;;-1:-1:-1;;1336:22:7;;;1360:2;1332:31;1328:40;1316:53;;;1384:18;;;1404:22;;;1381:46;1378:72;;;1430:18;;:::i;:::-;1470:10;1466:2;1459:22;1505:2;1497:6;1490:18;1551:3;1544:4;1539:2;1531:6;1527:15;1523:26;1520:35;1517:55;;;1568:1;1565;1558:12;1517:55;1632:2;1625:4;1617:6;1613:17;1606:4;1598:6;1594:17;1581:54;1679:1;1672:4;1667:2;1659:6;1655:15;1651:26;1644:37;1699:6;1690:15;;;;;;933:778;;;;:::o;1716:396::-;1794:6;1802;1855:2;1843:9;1834:7;1830:23;1826:32;1823:52;;;1871:1;1868;1861:12;1823:52;1894:29;1913:9;1894:29;:::i;:::-;1884:39;;1974:2;1963:9;1959:18;1946:32;2001:18;1993:6;1990:30;1987:50;;;2033:1;2030;2023:12;1987:50;2056;2098:7;2089:6;2078:9;2074:22;2056:50;:::i;:::-;2046:60;;;1716:396;;;;;:::o;2117:180::-;2176:6;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;-1:-1:-1;2268:23:7;;2117:180;-1:-1:-1;2117:180:7:o;2484:254::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2665:9;2652:23;2642:33;;2694:38;2728:2;2717:9;2713:18;2694:38;:::i;:::-;2684:48;;2484:254;;;;;:::o;2743:470::-;2830:6;2838;2846;2899:2;2887:9;2878:7;2874:23;2870:32;2867:52;;;2915:1;2912;2905:12;2867:52;2938:29;2957:9;2938:29;:::i;:::-;2928:39;;3018:2;3007:9;3003:18;2990:32;3045:18;3037:6;3034:30;3031:50;;;3077:1;3074;3067:12;3031:50;3100;3142:7;3133:6;3122:9;3118:22;3100:50;:::i;:::-;3090:60;;;3169:38;3203:2;3192:9;3188:18;3169:38;:::i;:::-;3159:48;;2743:470;;;;;:::o;3218:::-;3305:6;3313;3321;3374:2;3362:9;3353:7;3349:23;3345:32;3342:52;;;3390:1;3387;3380:12;3342:52;3413:29;3432:9;3413:29;:::i;:::-;3403:39;;3461:38;3495:2;3484:9;3480:18;3461:38;:::i;:::-;3451:48;;3550:2;3539:9;3535:18;3522:32;3577:18;3569:6;3566:30;3563:50;;;3609:1;3606;3599:12;3563:50;3632;3674:7;3665:6;3654:9;3650:22;3632:50;:::i;:::-;3622:60;;;3218:470;;;;;:::o;3693:250::-;3778:1;3788:113;3802:6;3799:1;3796:13;3788:113;;;3878:11;;;3872:18;3859:11;;;3852:39;3824:2;3817:10;3788:113;;;-1:-1:-1;;3935:1:7;3917:16;;3910:27;3693:250::o;3948:445::-;4158:66;4149:6;4145:2;4141:15;4137:88;4132:3;4125:101;4107:3;4255:6;4249:13;4271:75;4339:6;4334:2;4329:3;4325:12;4318:4;4310:6;4306:17;4271:75;:::i;:::-;4366:16;;;;4384:2;4362:25;;3948:445;-1:-1:-1;;;3948:445:7:o;4814:330::-;4856:3;4894:5;4888:12;4921:6;4916:3;4909:19;4937:76;5006:6;4999:4;4994:3;4990:14;4983:4;4976:5;4972:16;4937:76;:::i;:::-;5058:2;5046:15;-1:-1:-1;;5042:88:7;5033:98;;;;5133:4;5029:109;;4814:330;-1:-1:-1;;4814:330:7:o;5149:441::-;5317:4;5346:42;5427:2;5419:6;5415:15;5404:9;5397:34;5479:2;5471:6;5467:15;5462:2;5451:9;5447:18;5440:43;;5519:2;5514;5503:9;5499:18;5492:30;5539:45;5580:2;5569:9;5565:18;5557:6;5539:45;:::i;5595:812::-;6006:25;6001:3;5994:38;5976:3;6061:6;6055:13;6077:75;6145:6;6140:2;6135:3;6131:12;6124:4;6116:6;6112:17;6077:75;:::i;:::-;6216:19;6211:2;6171:16;;;6203:11;;;6196:40;6261:13;;6283:76;6261:13;6345:2;6337:11;;6330:4;6318:17;;6283:76;:::i;:::-;6379:17;6398:2;6375:26;;5595:812;-1:-1:-1;;;;5595:812:7:o;6412:220::-;6561:2;6550:9;6543:21;6524:4;6581:45;6622:2;6611:9;6607:18;6599:6;6581:45;:::i;6637:184::-;6689:77;6686:1;6679:88;6786:4;6783:1;6776:15;6810:4;6807:1;6800:15;6826:168;6899:9;;;6930;;6947:15;;;6941:22;;6927:37;6917:71;;6968:18;;:::i;6999:125::-;7064:9;;;7085:10;;;7082:36;;;7098:18;;:::i;7129:184::-;7181:77;7178:1;7171:88;7278:4;7275:1;7268:15;7302:4;7299:1;7292:15;7318:196;7357:3;7385:5;7375:39;;7394:18;;:::i;:::-;-1:-1:-1;7441:66:7;7430:78;;7318:196::o"},"gasEstimates":{"creation":{"codeDepositCost":"778800","executionCost":"29504","totalCost":"808304"},"external":{"DEFAULT_ADMIN_ROLE()":"239","getRoleAdmin(bytes32)":"2470","giveCallPermission(address,string,address)":"infinite","grantRole(bytes32,address)":"infinite","hasPermission(address,address,string)":"infinite","hasRole(bytes32,address)":"2637","isAllowedToCall(address,string)":"infinite","renounceRole(bytes32,address)":"28972","revokeCallPermission(address,string,address)":"infinite","revokeRole(bytes32,address)":"infinite","supportsInterface(bytes4)":"393"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","giveCallPermission(address,string,address)":"584f6b60","grantRole(bytes32,address)":"2f2ff15d","hasPermission(address,address,string)":"82bfd0f0","hasRole(bytes32,address)":"91d14854","isAllowedToCall(address,string)":"18c5e8ab","renounceRole(bytes32,address)":"36568abe","revokeCallPermission(address,string,address)":"545f7a32","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"}],\"name\":\"PermissionGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"}],\"name\":\"PermissionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"accountToPermit\",\"type\":\"address\"}],\"name\":\"giveCallPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"}],\"name\":\"isAllowedToCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"functionSig\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"accountToRevoke\",\"type\":\"address\"}],\"name\":\"revokeCallPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xLucian\",\"details\":\"This contract is a wrapper of OpenZeppelin AccessControl\\t\\textending it in a way to standartize access control\\t\\twithin Venus Smart Contract Ecosystem\",\"events\":{\"PermissionGranted(address,address,string)\":{\"details\":\"If contract address is 0x000..0 this means that the account is a default admin of this function and can call any contract function with this signature\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"giveCallPermission(address,string,address)\":{\"custom:events\":\"Emits a {RoleGranted} and {PermissionGranted} events.\",\"details\":\"this function can be called only from Role Admin or DEFAULT_ADMIN_ROLEif contractAddress is zero address, the account can access the specified function      on **any** contract managed by this ACL\",\"params\":{\"accountToPermit\":\"account that will be given access to the contract function\",\"contractAddress\":\"address of contract for which call permissions will be granted\",\"functionSig\":\"signature e.g. \\\"functionName(uint256,bool)\\\"\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasPermission(address,address,string)\":{\"details\":\"This function is used as a view function to check permissions rather than contract hook for access restriction check.\",\"params\":{\"account\":\"for which call permissions will be checked against\",\"contractAddress\":\"address of the restricted contract\",\"functionSig\":\"signature of the restricted function e.g. \\\"functionName(uint256,bool)\\\"\"},\"returns\":{\"_0\":\"false if the user account cannot call the particular contract function\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAllowedToCall(address,string)\":{\"details\":\"Since restricted contracts using this function as a permission hook, we can get contracts address with msg.sender\",\"params\":{\"account\":\"for which call permissions will be checked\",\"functionSig\":\"restricted function signature e.g. \\\"functionName(uint256,bool)\\\"\"},\"returns\":{\"_0\":\"false if the user account cannot call the particular contract function\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeCallPermission(address,string,address)\":{\"custom:events\":\"Emits {RoleRevoked} and {PermissionRevoked} events.\",\"details\":\"this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE \\t\\tMay emit a {RoleRevoked} event.\",\"params\":{\"contractAddress\":\"address of contract for which call permissions will be revoked\",\"functionSig\":\"signature e.g. \\\"functionName(uint256,bool)\\\"\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Venus Access Control Contract\",\"version\":1},\"userdoc\":{\"events\":{\"PermissionGranted(address,address,string)\":{\"notice\":\"Emitted when an account is given a permission to a certain contract function\"},\"PermissionRevoked(address,address,string)\":{\"notice\":\"Emitted when an account is revoked a permission to a certain contract function\"}},\"kind\":\"user\",\"methods\":{\"giveCallPermission(address,string,address)\":{\"notice\":\"Gives a function call permission to one single account\"},\"hasPermission(address,address,string)\":{\"notice\":\"Verifies if the given account can call a contract's guarded function\"},\"isAllowedToCall(address,string)\":{\"notice\":\"Verifies if the given account can call a contract's guarded function\"},\"revokeCallPermission(address,string,address)\":{\"notice\":\"Revokes an account's permission to a particular function call\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/AccessControlManager.sol\":\"AccessControlManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Governance/AccessControlManager.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Venus Access Control Contract\\r\\n * @author 0xLucian\\r\\n * @dev This contract is a wrapper of OpenZeppelin AccessControl\\r\\n *\\t\\textending it in a way to standartize access control\\r\\n *\\t\\twithin Venus Smart Contract Ecosystem\\r\\n */\\r\\ncontract AccessControlManager is AccessControl {\\r\\n    /// @notice Emitted when an account is given a permission to a certain contract function\\r\\n    /// @dev If contract address is 0x000..0 this means that the account is a default admin of this function and\\r\\n    /// can call any contract function with this signature\\r\\n    event PermissionGranted(address account, address contractAddress, string functionSig);\\r\\n\\r\\n    /// @notice Emitted when an account is revoked a permission to a certain contract function\\r\\n    event PermissionRevoked(address account, address contractAddress, string functionSig);\\r\\n\\r\\n    constructor() {\\r\\n        // Grant the contract deployer the default admin role: it will be able\\r\\n        // to grant and revoke any roles\\r\\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Verifies if the given account can call a contract's guarded function\\r\\n     * @dev Since restricted contracts using this function as a permission hook, we can get contracts address with msg.sender\\r\\n     * @param account for which call permissions will be checked\\r\\n     * @param functionSig restricted function signature e.g. \\\"functionName(uint256,bool)\\\"\\r\\n     * @return false if the user account cannot call the particular contract function\\r\\n     *\\r\\n     */\\r\\n    function isAllowedToCall(address account, string memory functionSig) public view returns (bool) {\\r\\n        bytes32 role = keccak256(abi.encodePacked(msg.sender, functionSig));\\r\\n\\r\\n        if (hasRole(role, account)) {\\r\\n            return true;\\r\\n        } else {\\r\\n            role = keccak256(abi.encodePacked(address(0), functionSig));\\r\\n            return hasRole(role, account);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Verifies if the given account can call a contract's guarded function\\r\\n     * @dev This function is used as a view function to check permissions rather than contract hook for access restriction check.\\r\\n     * @param account for which call permissions will be checked against\\r\\n     * @param contractAddress address of the restricted contract\\r\\n     * @param functionSig signature of the restricted function e.g. \\\"functionName(uint256,bool)\\\"\\r\\n     * @return false if the user account cannot call the particular contract function\\r\\n     */\\r\\n    function hasPermission(\\r\\n        address account,\\r\\n        address contractAddress,\\r\\n        string memory functionSig\\r\\n    ) public view returns (bool) {\\r\\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\\r\\n        return hasRole(role, account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Gives a function call permission to one single account\\r\\n     * @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\\r\\n     * @param contractAddress address of contract for which call permissions will be granted\\r\\n     * @dev if contractAddress is zero address, the account can access the specified function\\r\\n     *      on **any** contract managed by this ACL\\r\\n     * @param functionSig signature e.g. \\\"functionName(uint256,bool)\\\"\\r\\n     * @param accountToPermit account that will be given access to the contract function\\r\\n     * @custom:events Emits a {RoleGranted} and {PermissionGranted} events.\\r\\n     */\\r\\n    function giveCallPermission(\\r\\n        address contractAddress,\\r\\n        string memory functionSig,\\r\\n        address accountToPermit\\r\\n    ) public {\\r\\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\\r\\n        grantRole(role, accountToPermit);\\r\\n        emit PermissionGranted(accountToPermit, contractAddress, functionSig);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Revokes an account's permission to a particular function call\\r\\n     * @dev this function can be called only from Role Admin or DEFAULT_ADMIN_ROLE\\r\\n     * \\t\\tMay emit a {RoleRevoked} event.\\r\\n     * @param contractAddress address of contract for which call permissions will be revoked\\r\\n     * @param functionSig signature e.g. \\\"functionName(uint256,bool)\\\"\\r\\n     * @custom:events Emits {RoleRevoked} and {PermissionRevoked} events.\\r\\n     */\\r\\n    function revokeCallPermission(\\r\\n        address contractAddress,\\r\\n        string memory functionSig,\\r\\n        address accountToRevoke\\r\\n    ) public {\\r\\n        bytes32 role = keccak256(abi.encodePacked(contractAddress, functionSig));\\r\\n        revokeRole(role, accountToRevoke);\\r\\n        emit PermissionRevoked(accountToRevoke, contractAddress, functionSig);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x45e6c6e4c4402016301d0f00e7b87b7446c2be33c865d37445eb9a1ecc2c4709\",\"license\":\"BSD-3-Clause\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"contracts/Governance/AccessControlManager.sol:AccessControlManager","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"contracts/Governance/AccessControlManager.sol:AccessControlManager","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"contracts/Governance/AccessControlManager.sol:AccessControlManager","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"events":{"PermissionGranted(address,address,string)":{"notice":"Emitted when an account is given a permission to a certain contract function"},"PermissionRevoked(address,address,string)":{"notice":"Emitted when an account is revoked a permission to a certain contract function"}},"kind":"user","methods":{"giveCallPermission(address,string,address)":{"notice":"Gives a function call permission to one single account"},"hasPermission(address,address,string)":{"notice":"Verifies if the given account can call a contract's guarded function"},"isAllowedToCall(address,string)":{"notice":"Verifies if the given account can call a contract's guarded function"},"revokeCallPermission(address,string,address)":{"notice":"Revokes an account's permission to a particular function call"}},"version":1}}}}}}